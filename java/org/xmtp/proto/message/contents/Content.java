// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message_contents/content.proto

package org.xmtp.proto.message.contents;

public final class Content {
  private Content() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   * Recognized compression algorithms
   * protolint:disable ENUM_FIELD_NAMES_ZERO_VALUE_END_WITH
   * </pre>
   *
   * Protobuf enum {@code xmtp.message_contents.Compression}
   */
  public enum Compression
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>COMPRESSION_DEFLATE = 0;</code>
     */
    COMPRESSION_DEFLATE(0),
    /**
     * <code>COMPRESSION_GZIP = 1;</code>
     */
    COMPRESSION_GZIP(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>COMPRESSION_DEFLATE = 0;</code>
     */
    public static final int COMPRESSION_DEFLATE_VALUE = 0;
    /**
     * <code>COMPRESSION_GZIP = 1;</code>
     */
    public static final int COMPRESSION_GZIP_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Compression valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Compression forNumber(int value) {
      switch (value) {
        case 0: return COMPRESSION_DEFLATE;
        case 1: return COMPRESSION_GZIP;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Compression>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Compression> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Compression>() {
            public Compression findValueByNumber(int number) {
              return Compression.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.xmtp.proto.message.contents.Content.getDescriptor().getEnumTypes().get(0);
    }

    private static final Compression[] VALUES = values();

    public static Compression valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Compression(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:xmtp.message_contents.Compression)
  }

  public interface ContentTypeIdOrBuilder extends
      // @@protoc_insertion_point(interface_extends:xmtp.message_contents.ContentTypeId)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * authority governing this content type
     * </pre>
     *
     * <code>string authority_id = 1;</code>
     * @return The authorityId.
     */
    java.lang.String getAuthorityId();
    /**
     * <pre>
     * authority governing this content type
     * </pre>
     *
     * <code>string authority_id = 1;</code>
     * @return The bytes for authorityId.
     */
    com.google.protobuf.ByteString
        getAuthorityIdBytes();

    /**
     * <pre>
     * type identifier
     * </pre>
     *
     * <code>string type_id = 2;</code>
     * @return The typeId.
     */
    java.lang.String getTypeId();
    /**
     * <pre>
     * type identifier
     * </pre>
     *
     * <code>string type_id = 2;</code>
     * @return The bytes for typeId.
     */
    com.google.protobuf.ByteString
        getTypeIdBytes();

    /**
     * <pre>
     * major version of the type
     * </pre>
     *
     * <code>uint32 version_major = 3;</code>
     * @return The versionMajor.
     */
    int getVersionMajor();

    /**
     * <pre>
     * minor version of the type
     * </pre>
     *
     * <code>uint32 version_minor = 4;</code>
     * @return The versionMinor.
     */
    int getVersionMinor();
  }
  /**
   * <pre>
   * ContentTypeId is used to identify the type of content stored in a Message.
   * </pre>
   *
   * Protobuf type {@code xmtp.message_contents.ContentTypeId}
   */
  public static final class ContentTypeId extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:xmtp.message_contents.ContentTypeId)
      ContentTypeIdOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ContentTypeId.newBuilder() to construct.
    private ContentTypeId(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ContentTypeId() {
      authorityId_ = "";
      typeId_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ContentTypeId();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.xmtp.proto.message.contents.Content.internal_static_xmtp_message_contents_ContentTypeId_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.xmtp.proto.message.contents.Content.internal_static_xmtp_message_contents_ContentTypeId_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.xmtp.proto.message.contents.Content.ContentTypeId.class, org.xmtp.proto.message.contents.Content.ContentTypeId.Builder.class);
    }

    public static final int AUTHORITY_ID_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object authorityId_ = "";
    /**
     * <pre>
     * authority governing this content type
     * </pre>
     *
     * <code>string authority_id = 1;</code>
     * @return The authorityId.
     */
    @java.lang.Override
    public java.lang.String getAuthorityId() {
      java.lang.Object ref = authorityId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        authorityId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * authority governing this content type
     * </pre>
     *
     * <code>string authority_id = 1;</code>
     * @return The bytes for authorityId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getAuthorityIdBytes() {
      java.lang.Object ref = authorityId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        authorityId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TYPE_ID_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object typeId_ = "";
    /**
     * <pre>
     * type identifier
     * </pre>
     *
     * <code>string type_id = 2;</code>
     * @return The typeId.
     */
    @java.lang.Override
    public java.lang.String getTypeId() {
      java.lang.Object ref = typeId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        typeId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * type identifier
     * </pre>
     *
     * <code>string type_id = 2;</code>
     * @return The bytes for typeId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTypeIdBytes() {
      java.lang.Object ref = typeId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        typeId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VERSION_MAJOR_FIELD_NUMBER = 3;
    private int versionMajor_ = 0;
    /**
     * <pre>
     * major version of the type
     * </pre>
     *
     * <code>uint32 version_major = 3;</code>
     * @return The versionMajor.
     */
    @java.lang.Override
    public int getVersionMajor() {
      return versionMajor_;
    }

    public static final int VERSION_MINOR_FIELD_NUMBER = 4;
    private int versionMinor_ = 0;
    /**
     * <pre>
     * minor version of the type
     * </pre>
     *
     * <code>uint32 version_minor = 4;</code>
     * @return The versionMinor.
     */
    @java.lang.Override
    public int getVersionMinor() {
      return versionMinor_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(authorityId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, authorityId_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(typeId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, typeId_);
      }
      if (versionMajor_ != 0) {
        output.writeUInt32(3, versionMajor_);
      }
      if (versionMinor_ != 0) {
        output.writeUInt32(4, versionMinor_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(authorityId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, authorityId_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(typeId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, typeId_);
      }
      if (versionMajor_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, versionMajor_);
      }
      if (versionMinor_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, versionMinor_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.xmtp.proto.message.contents.Content.ContentTypeId)) {
        return super.equals(obj);
      }
      org.xmtp.proto.message.contents.Content.ContentTypeId other = (org.xmtp.proto.message.contents.Content.ContentTypeId) obj;

      if (!getAuthorityId()
          .equals(other.getAuthorityId())) return false;
      if (!getTypeId()
          .equals(other.getTypeId())) return false;
      if (getVersionMajor()
          != other.getVersionMajor()) return false;
      if (getVersionMinor()
          != other.getVersionMinor()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + AUTHORITY_ID_FIELD_NUMBER;
      hash = (53 * hash) + getAuthorityId().hashCode();
      hash = (37 * hash) + TYPE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getTypeId().hashCode();
      hash = (37 * hash) + VERSION_MAJOR_FIELD_NUMBER;
      hash = (53 * hash) + getVersionMajor();
      hash = (37 * hash) + VERSION_MINOR_FIELD_NUMBER;
      hash = (53 * hash) + getVersionMinor();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.xmtp.proto.message.contents.Content.ContentTypeId parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.xmtp.proto.message.contents.Content.ContentTypeId parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.xmtp.proto.message.contents.Content.ContentTypeId parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.xmtp.proto.message.contents.Content.ContentTypeId parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.xmtp.proto.message.contents.Content.ContentTypeId parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.xmtp.proto.message.contents.Content.ContentTypeId parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.xmtp.proto.message.contents.Content.ContentTypeId parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.xmtp.proto.message.contents.Content.ContentTypeId parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.xmtp.proto.message.contents.Content.ContentTypeId parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.xmtp.proto.message.contents.Content.ContentTypeId parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.xmtp.proto.message.contents.Content.ContentTypeId parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.xmtp.proto.message.contents.Content.ContentTypeId parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.xmtp.proto.message.contents.Content.ContentTypeId prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * ContentTypeId is used to identify the type of content stored in a Message.
     * </pre>
     *
     * Protobuf type {@code xmtp.message_contents.ContentTypeId}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:xmtp.message_contents.ContentTypeId)
        org.xmtp.proto.message.contents.Content.ContentTypeIdOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.xmtp.proto.message.contents.Content.internal_static_xmtp_message_contents_ContentTypeId_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.xmtp.proto.message.contents.Content.internal_static_xmtp_message_contents_ContentTypeId_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.xmtp.proto.message.contents.Content.ContentTypeId.class, org.xmtp.proto.message.contents.Content.ContentTypeId.Builder.class);
      }

      // Construct using org.xmtp.proto.message.contents.Content.ContentTypeId.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        authorityId_ = "";
        typeId_ = "";
        versionMajor_ = 0;
        versionMinor_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.xmtp.proto.message.contents.Content.internal_static_xmtp_message_contents_ContentTypeId_descriptor;
      }

      @java.lang.Override
      public org.xmtp.proto.message.contents.Content.ContentTypeId getDefaultInstanceForType() {
        return org.xmtp.proto.message.contents.Content.ContentTypeId.getDefaultInstance();
      }

      @java.lang.Override
      public org.xmtp.proto.message.contents.Content.ContentTypeId build() {
        org.xmtp.proto.message.contents.Content.ContentTypeId result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.xmtp.proto.message.contents.Content.ContentTypeId buildPartial() {
        org.xmtp.proto.message.contents.Content.ContentTypeId result = new org.xmtp.proto.message.contents.Content.ContentTypeId(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.xmtp.proto.message.contents.Content.ContentTypeId result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.authorityId_ = authorityId_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.typeId_ = typeId_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.versionMajor_ = versionMajor_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.versionMinor_ = versionMinor_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.xmtp.proto.message.contents.Content.ContentTypeId) {
          return mergeFrom((org.xmtp.proto.message.contents.Content.ContentTypeId)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.xmtp.proto.message.contents.Content.ContentTypeId other) {
        if (other == org.xmtp.proto.message.contents.Content.ContentTypeId.getDefaultInstance()) return this;
        if (!other.getAuthorityId().isEmpty()) {
          authorityId_ = other.authorityId_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (!other.getTypeId().isEmpty()) {
          typeId_ = other.typeId_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (other.getVersionMajor() != 0) {
          setVersionMajor(other.getVersionMajor());
        }
        if (other.getVersionMinor() != 0) {
          setVersionMinor(other.getVersionMinor());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                authorityId_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                typeId_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 24: {
                versionMajor_ = input.readUInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                versionMinor_ = input.readUInt32();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object authorityId_ = "";
      /**
       * <pre>
       * authority governing this content type
       * </pre>
       *
       * <code>string authority_id = 1;</code>
       * @return The authorityId.
       */
      public java.lang.String getAuthorityId() {
        java.lang.Object ref = authorityId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          authorityId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * authority governing this content type
       * </pre>
       *
       * <code>string authority_id = 1;</code>
       * @return The bytes for authorityId.
       */
      public com.google.protobuf.ByteString
          getAuthorityIdBytes() {
        java.lang.Object ref = authorityId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          authorityId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * authority governing this content type
       * </pre>
       *
       * <code>string authority_id = 1;</code>
       * @param value The authorityId to set.
       * @return This builder for chaining.
       */
      public Builder setAuthorityId(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        authorityId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * authority governing this content type
       * </pre>
       *
       * <code>string authority_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearAuthorityId() {
        authorityId_ = getDefaultInstance().getAuthorityId();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * authority governing this content type
       * </pre>
       *
       * <code>string authority_id = 1;</code>
       * @param value The bytes for authorityId to set.
       * @return This builder for chaining.
       */
      public Builder setAuthorityIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        authorityId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private java.lang.Object typeId_ = "";
      /**
       * <pre>
       * type identifier
       * </pre>
       *
       * <code>string type_id = 2;</code>
       * @return The typeId.
       */
      public java.lang.String getTypeId() {
        java.lang.Object ref = typeId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          typeId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * type identifier
       * </pre>
       *
       * <code>string type_id = 2;</code>
       * @return The bytes for typeId.
       */
      public com.google.protobuf.ByteString
          getTypeIdBytes() {
        java.lang.Object ref = typeId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          typeId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * type identifier
       * </pre>
       *
       * <code>string type_id = 2;</code>
       * @param value The typeId to set.
       * @return This builder for chaining.
       */
      public Builder setTypeId(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        typeId_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * type identifier
       * </pre>
       *
       * <code>string type_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTypeId() {
        typeId_ = getDefaultInstance().getTypeId();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * type identifier
       * </pre>
       *
       * <code>string type_id = 2;</code>
       * @param value The bytes for typeId to set.
       * @return This builder for chaining.
       */
      public Builder setTypeIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        typeId_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private int versionMajor_ ;
      /**
       * <pre>
       * major version of the type
       * </pre>
       *
       * <code>uint32 version_major = 3;</code>
       * @return The versionMajor.
       */
      @java.lang.Override
      public int getVersionMajor() {
        return versionMajor_;
      }
      /**
       * <pre>
       * major version of the type
       * </pre>
       *
       * <code>uint32 version_major = 3;</code>
       * @param value The versionMajor to set.
       * @return This builder for chaining.
       */
      public Builder setVersionMajor(int value) {
        
        versionMajor_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * major version of the type
       * </pre>
       *
       * <code>uint32 version_major = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearVersionMajor() {
        bitField0_ = (bitField0_ & ~0x00000004);
        versionMajor_ = 0;
        onChanged();
        return this;
      }

      private int versionMinor_ ;
      /**
       * <pre>
       * minor version of the type
       * </pre>
       *
       * <code>uint32 version_minor = 4;</code>
       * @return The versionMinor.
       */
      @java.lang.Override
      public int getVersionMinor() {
        return versionMinor_;
      }
      /**
       * <pre>
       * minor version of the type
       * </pre>
       *
       * <code>uint32 version_minor = 4;</code>
       * @param value The versionMinor to set.
       * @return This builder for chaining.
       */
      public Builder setVersionMinor(int value) {
        
        versionMinor_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * minor version of the type
       * </pre>
       *
       * <code>uint32 version_minor = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearVersionMinor() {
        bitField0_ = (bitField0_ & ~0x00000008);
        versionMinor_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:xmtp.message_contents.ContentTypeId)
    }

    // @@protoc_insertion_point(class_scope:xmtp.message_contents.ContentTypeId)
    private static final org.xmtp.proto.message.contents.Content.ContentTypeId DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.xmtp.proto.message.contents.Content.ContentTypeId();
    }

    public static org.xmtp.proto.message.contents.Content.ContentTypeId getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ContentTypeId>
        PARSER = new com.google.protobuf.AbstractParser<ContentTypeId>() {
      @java.lang.Override
      public ContentTypeId parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ContentTypeId> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ContentTypeId> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.xmtp.proto.message.contents.Content.ContentTypeId getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EncodedContentOrBuilder extends
      // @@protoc_insertion_point(interface_extends:xmtp.message_contents.EncodedContent)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * content type identifier used to match the payload with
     * the correct decoding machinery
     * </pre>
     *
     * <code>.xmtp.message_contents.ContentTypeId type = 1;</code>
     * @return Whether the type field is set.
     */
    boolean hasType();
    /**
     * <pre>
     * content type identifier used to match the payload with
     * the correct decoding machinery
     * </pre>
     *
     * <code>.xmtp.message_contents.ContentTypeId type = 1;</code>
     * @return The type.
     */
    org.xmtp.proto.message.contents.Content.ContentTypeId getType();
    /**
     * <pre>
     * content type identifier used to match the payload with
     * the correct decoding machinery
     * </pre>
     *
     * <code>.xmtp.message_contents.ContentTypeId type = 1;</code>
     */
    org.xmtp.proto.message.contents.Content.ContentTypeIdOrBuilder getTypeOrBuilder();

    /**
     * <pre>
     * optional encoding parameters required to correctly decode the content
     * </pre>
     *
     * <code>map&lt;string, string&gt; parameters = 2;</code>
     */
    int getParametersCount();
    /**
     * <pre>
     * optional encoding parameters required to correctly decode the content
     * </pre>
     *
     * <code>map&lt;string, string&gt; parameters = 2;</code>
     */
    boolean containsParameters(
        java.lang.String key);
    /**
     * Use {@link #getParametersMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getParameters();
    /**
     * <pre>
     * optional encoding parameters required to correctly decode the content
     * </pre>
     *
     * <code>map&lt;string, string&gt; parameters = 2;</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getParametersMap();
    /**
     * <pre>
     * optional encoding parameters required to correctly decode the content
     * </pre>
     *
     * <code>map&lt;string, string&gt; parameters = 2;</code>
     */
    /* nullable */
java.lang.String getParametersOrDefault(
        java.lang.String key,
        /* nullable */
java.lang.String defaultValue);
    /**
     * <pre>
     * optional encoding parameters required to correctly decode the content
     * </pre>
     *
     * <code>map&lt;string, string&gt; parameters = 2;</code>
     */
    java.lang.String getParametersOrThrow(
        java.lang.String key);

    /**
     * <pre>
     * optional fallback description of the content that can be used in case
     * the client cannot decode or render the content
     * </pre>
     *
     * <code>optional string fallback = 3;</code>
     * @return Whether the fallback field is set.
     */
    boolean hasFallback();
    /**
     * <pre>
     * optional fallback description of the content that can be used in case
     * the client cannot decode or render the content
     * </pre>
     *
     * <code>optional string fallback = 3;</code>
     * @return The fallback.
     */
    java.lang.String getFallback();
    /**
     * <pre>
     * optional fallback description of the content that can be used in case
     * the client cannot decode or render the content
     * </pre>
     *
     * <code>optional string fallback = 3;</code>
     * @return The bytes for fallback.
     */
    com.google.protobuf.ByteString
        getFallbackBytes();

    /**
     * <pre>
     * optional compression; the value indicates algorithm used to
     * compress the encoded content bytes
     * </pre>
     *
     * <code>optional .xmtp.message_contents.Compression compression = 5;</code>
     * @return Whether the compression field is set.
     */
    boolean hasCompression();
    /**
     * <pre>
     * optional compression; the value indicates algorithm used to
     * compress the encoded content bytes
     * </pre>
     *
     * <code>optional .xmtp.message_contents.Compression compression = 5;</code>
     * @return The enum numeric value on the wire for compression.
     */
    int getCompressionValue();
    /**
     * <pre>
     * optional compression; the value indicates algorithm used to
     * compress the encoded content bytes
     * </pre>
     *
     * <code>optional .xmtp.message_contents.Compression compression = 5;</code>
     * @return The compression.
     */
    org.xmtp.proto.message.contents.Content.Compression getCompression();

    /**
     * <pre>
     * encoded content itself
     * </pre>
     *
     * <code>bytes content = 4;</code>
     * @return The content.
     */
    com.google.protobuf.ByteString getContent();
  }
  /**
   * <pre>
   * EncodedContent bundles the content with metadata identifying its type
   * and parameters required for correct decoding and presentation of the content.
   * </pre>
   *
   * Protobuf type {@code xmtp.message_contents.EncodedContent}
   */
  public static final class EncodedContent extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:xmtp.message_contents.EncodedContent)
      EncodedContentOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use EncodedContent.newBuilder() to construct.
    private EncodedContent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private EncodedContent() {
      fallback_ = "";
      compression_ = 0;
      content_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new EncodedContent();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.xmtp.proto.message.contents.Content.internal_static_xmtp_message_contents_EncodedContent_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 2:
          return internalGetParameters();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.xmtp.proto.message.contents.Content.internal_static_xmtp_message_contents_EncodedContent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.xmtp.proto.message.contents.Content.EncodedContent.class, org.xmtp.proto.message.contents.Content.EncodedContent.Builder.class);
    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private org.xmtp.proto.message.contents.Content.ContentTypeId type_;
    /**
     * <pre>
     * content type identifier used to match the payload with
     * the correct decoding machinery
     * </pre>
     *
     * <code>.xmtp.message_contents.ContentTypeId type = 1;</code>
     * @return Whether the type field is set.
     */
    @java.lang.Override
    public boolean hasType() {
      return type_ != null;
    }
    /**
     * <pre>
     * content type identifier used to match the payload with
     * the correct decoding machinery
     * </pre>
     *
     * <code>.xmtp.message_contents.ContentTypeId type = 1;</code>
     * @return The type.
     */
    @java.lang.Override
    public org.xmtp.proto.message.contents.Content.ContentTypeId getType() {
      return type_ == null ? org.xmtp.proto.message.contents.Content.ContentTypeId.getDefaultInstance() : type_;
    }
    /**
     * <pre>
     * content type identifier used to match the payload with
     * the correct decoding machinery
     * </pre>
     *
     * <code>.xmtp.message_contents.ContentTypeId type = 1;</code>
     */
    @java.lang.Override
    public org.xmtp.proto.message.contents.Content.ContentTypeIdOrBuilder getTypeOrBuilder() {
      return type_ == null ? org.xmtp.proto.message.contents.Content.ContentTypeId.getDefaultInstance() : type_;
    }

    public static final int PARAMETERS_FIELD_NUMBER = 2;
    private static final class ParametersDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  org.xmtp.proto.message.contents.Content.internal_static_xmtp_message_contents_EncodedContent_ParametersEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> parameters_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetParameters() {
      if (parameters_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ParametersDefaultEntryHolder.defaultEntry);
      }
      return parameters_;
    }
    public int getParametersCount() {
      return internalGetParameters().getMap().size();
    }
    /**
     * <pre>
     * optional encoding parameters required to correctly decode the content
     * </pre>
     *
     * <code>map&lt;string, string&gt; parameters = 2;</code>
     */
    @java.lang.Override
    public boolean containsParameters(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetParameters().getMap().containsKey(key);
    }
    /**
     * Use {@link #getParametersMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getParameters() {
      return getParametersMap();
    }
    /**
     * <pre>
     * optional encoding parameters required to correctly decode the content
     * </pre>
     *
     * <code>map&lt;string, string&gt; parameters = 2;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, java.lang.String> getParametersMap() {
      return internalGetParameters().getMap();
    }
    /**
     * <pre>
     * optional encoding parameters required to correctly decode the content
     * </pre>
     *
     * <code>map&lt;string, string&gt; parameters = 2;</code>
     */
    @java.lang.Override
    public /* nullable */
java.lang.String getParametersOrDefault(
        java.lang.String key,
        /* nullable */
java.lang.String defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetParameters().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * optional encoding parameters required to correctly decode the content
     * </pre>
     *
     * <code>map&lt;string, string&gt; parameters = 2;</code>
     */
    @java.lang.Override
    public java.lang.String getParametersOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetParameters().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int FALLBACK_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private volatile java.lang.Object fallback_ = "";
    /**
     * <pre>
     * optional fallback description of the content that can be used in case
     * the client cannot decode or render the content
     * </pre>
     *
     * <code>optional string fallback = 3;</code>
     * @return Whether the fallback field is set.
     */
    @java.lang.Override
    public boolean hasFallback() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * optional fallback description of the content that can be used in case
     * the client cannot decode or render the content
     * </pre>
     *
     * <code>optional string fallback = 3;</code>
     * @return The fallback.
     */
    @java.lang.Override
    public java.lang.String getFallback() {
      java.lang.Object ref = fallback_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        fallback_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * optional fallback description of the content that can be used in case
     * the client cannot decode or render the content
     * </pre>
     *
     * <code>optional string fallback = 3;</code>
     * @return The bytes for fallback.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getFallbackBytes() {
      java.lang.Object ref = fallback_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fallback_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int COMPRESSION_FIELD_NUMBER = 5;
    private int compression_ = 0;
    /**
     * <pre>
     * optional compression; the value indicates algorithm used to
     * compress the encoded content bytes
     * </pre>
     *
     * <code>optional .xmtp.message_contents.Compression compression = 5;</code>
     * @return Whether the compression field is set.
     */
    @java.lang.Override public boolean hasCompression() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * optional compression; the value indicates algorithm used to
     * compress the encoded content bytes
     * </pre>
     *
     * <code>optional .xmtp.message_contents.Compression compression = 5;</code>
     * @return The enum numeric value on the wire for compression.
     */
    @java.lang.Override public int getCompressionValue() {
      return compression_;
    }
    /**
     * <pre>
     * optional compression; the value indicates algorithm used to
     * compress the encoded content bytes
     * </pre>
     *
     * <code>optional .xmtp.message_contents.Compression compression = 5;</code>
     * @return The compression.
     */
    @java.lang.Override public org.xmtp.proto.message.contents.Content.Compression getCompression() {
      org.xmtp.proto.message.contents.Content.Compression result = org.xmtp.proto.message.contents.Content.Compression.forNumber(compression_);
      return result == null ? org.xmtp.proto.message.contents.Content.Compression.UNRECOGNIZED : result;
    }

    public static final int CONTENT_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString content_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * encoded content itself
     * </pre>
     *
     * <code>bytes content = 4;</code>
     * @return The content.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getContent() {
      return content_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != null) {
        output.writeMessage(1, getType());
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetParameters(),
          ParametersDefaultEntryHolder.defaultEntry,
          2);
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, fallback_);
      }
      if (!content_.isEmpty()) {
        output.writeBytes(4, content_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeEnum(5, compression_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getType());
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetParameters().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        parameters__ = ParametersDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, parameters__);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, fallback_);
      }
      if (!content_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, content_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, compression_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.xmtp.proto.message.contents.Content.EncodedContent)) {
        return super.equals(obj);
      }
      org.xmtp.proto.message.contents.Content.EncodedContent other = (org.xmtp.proto.message.contents.Content.EncodedContent) obj;

      if (hasType() != other.hasType()) return false;
      if (hasType()) {
        if (!getType()
            .equals(other.getType())) return false;
      }
      if (!internalGetParameters().equals(
          other.internalGetParameters())) return false;
      if (hasFallback() != other.hasFallback()) return false;
      if (hasFallback()) {
        if (!getFallback()
            .equals(other.getFallback())) return false;
      }
      if (hasCompression() != other.hasCompression()) return false;
      if (hasCompression()) {
        if (compression_ != other.compression_) return false;
      }
      if (!getContent()
          .equals(other.getContent())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasType()) {
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getType().hashCode();
      }
      if (!internalGetParameters().getMap().isEmpty()) {
        hash = (37 * hash) + PARAMETERS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetParameters().hashCode();
      }
      if (hasFallback()) {
        hash = (37 * hash) + FALLBACK_FIELD_NUMBER;
        hash = (53 * hash) + getFallback().hashCode();
      }
      if (hasCompression()) {
        hash = (37 * hash) + COMPRESSION_FIELD_NUMBER;
        hash = (53 * hash) + compression_;
      }
      hash = (37 * hash) + CONTENT_FIELD_NUMBER;
      hash = (53 * hash) + getContent().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.xmtp.proto.message.contents.Content.EncodedContent parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.xmtp.proto.message.contents.Content.EncodedContent parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.xmtp.proto.message.contents.Content.EncodedContent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.xmtp.proto.message.contents.Content.EncodedContent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.xmtp.proto.message.contents.Content.EncodedContent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.xmtp.proto.message.contents.Content.EncodedContent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.xmtp.proto.message.contents.Content.EncodedContent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.xmtp.proto.message.contents.Content.EncodedContent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.xmtp.proto.message.contents.Content.EncodedContent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.xmtp.proto.message.contents.Content.EncodedContent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.xmtp.proto.message.contents.Content.EncodedContent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.xmtp.proto.message.contents.Content.EncodedContent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.xmtp.proto.message.contents.Content.EncodedContent prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * EncodedContent bundles the content with metadata identifying its type
     * and parameters required for correct decoding and presentation of the content.
     * </pre>
     *
     * Protobuf type {@code xmtp.message_contents.EncodedContent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:xmtp.message_contents.EncodedContent)
        org.xmtp.proto.message.contents.Content.EncodedContentOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.xmtp.proto.message.contents.Content.internal_static_xmtp_message_contents_EncodedContent_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 2:
            return internalGetParameters();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 2:
            return internalGetMutableParameters();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.xmtp.proto.message.contents.Content.internal_static_xmtp_message_contents_EncodedContent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.xmtp.proto.message.contents.Content.EncodedContent.class, org.xmtp.proto.message.contents.Content.EncodedContent.Builder.class);
      }

      // Construct using org.xmtp.proto.message.contents.Content.EncodedContent.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        type_ = null;
        if (typeBuilder_ != null) {
          typeBuilder_.dispose();
          typeBuilder_ = null;
        }
        internalGetMutableParameters().clear();
        fallback_ = "";
        compression_ = 0;
        content_ = com.google.protobuf.ByteString.EMPTY;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.xmtp.proto.message.contents.Content.internal_static_xmtp_message_contents_EncodedContent_descriptor;
      }

      @java.lang.Override
      public org.xmtp.proto.message.contents.Content.EncodedContent getDefaultInstanceForType() {
        return org.xmtp.proto.message.contents.Content.EncodedContent.getDefaultInstance();
      }

      @java.lang.Override
      public org.xmtp.proto.message.contents.Content.EncodedContent build() {
        org.xmtp.proto.message.contents.Content.EncodedContent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.xmtp.proto.message.contents.Content.EncodedContent buildPartial() {
        org.xmtp.proto.message.contents.Content.EncodedContent result = new org.xmtp.proto.message.contents.Content.EncodedContent(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.xmtp.proto.message.contents.Content.EncodedContent result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.type_ = typeBuilder_ == null
              ? type_
              : typeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.parameters_ = internalGetParameters();
          result.parameters_.makeImmutable();
        }
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.fallback_ = fallback_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.compression_ = compression_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.content_ = content_;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.xmtp.proto.message.contents.Content.EncodedContent) {
          return mergeFrom((org.xmtp.proto.message.contents.Content.EncodedContent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.xmtp.proto.message.contents.Content.EncodedContent other) {
        if (other == org.xmtp.proto.message.contents.Content.EncodedContent.getDefaultInstance()) return this;
        if (other.hasType()) {
          mergeType(other.getType());
        }
        internalGetMutableParameters().mergeFrom(
            other.internalGetParameters());
        bitField0_ |= 0x00000002;
        if (other.hasFallback()) {
          fallback_ = other.fallback_;
          bitField0_ |= 0x00000004;
          onChanged();
        }
        if (other.hasCompression()) {
          setCompression(other.getCompression());
        }
        if (other.getContent() != com.google.protobuf.ByteString.EMPTY) {
          setContent(other.getContent());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getTypeFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
                parameters__ = input.readMessage(
                    ParametersDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableParameters().getMutableMap().put(
                    parameters__.getKey(), parameters__.getValue());
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                fallback_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 34: {
                content_ = input.readBytes();
                bitField0_ |= 0x00000010;
                break;
              } // case 34
              case 40: {
                compression_ = input.readEnum();
                bitField0_ |= 0x00000008;
                break;
              } // case 40
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private org.xmtp.proto.message.contents.Content.ContentTypeId type_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.xmtp.proto.message.contents.Content.ContentTypeId, org.xmtp.proto.message.contents.Content.ContentTypeId.Builder, org.xmtp.proto.message.contents.Content.ContentTypeIdOrBuilder> typeBuilder_;
      /**
       * <pre>
       * content type identifier used to match the payload with
       * the correct decoding machinery
       * </pre>
       *
       * <code>.xmtp.message_contents.ContentTypeId type = 1;</code>
       * @return Whether the type field is set.
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * content type identifier used to match the payload with
       * the correct decoding machinery
       * </pre>
       *
       * <code>.xmtp.message_contents.ContentTypeId type = 1;</code>
       * @return The type.
       */
      public org.xmtp.proto.message.contents.Content.ContentTypeId getType() {
        if (typeBuilder_ == null) {
          return type_ == null ? org.xmtp.proto.message.contents.Content.ContentTypeId.getDefaultInstance() : type_;
        } else {
          return typeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * content type identifier used to match the payload with
       * the correct decoding machinery
       * </pre>
       *
       * <code>.xmtp.message_contents.ContentTypeId type = 1;</code>
       */
      public Builder setType(org.xmtp.proto.message.contents.Content.ContentTypeId value) {
        if (typeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          type_ = value;
        } else {
          typeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * content type identifier used to match the payload with
       * the correct decoding machinery
       * </pre>
       *
       * <code>.xmtp.message_contents.ContentTypeId type = 1;</code>
       */
      public Builder setType(
          org.xmtp.proto.message.contents.Content.ContentTypeId.Builder builderForValue) {
        if (typeBuilder_ == null) {
          type_ = builderForValue.build();
        } else {
          typeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * content type identifier used to match the payload with
       * the correct decoding machinery
       * </pre>
       *
       * <code>.xmtp.message_contents.ContentTypeId type = 1;</code>
       */
      public Builder mergeType(org.xmtp.proto.message.contents.Content.ContentTypeId value) {
        if (typeBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            type_ != null &&
            type_ != org.xmtp.proto.message.contents.Content.ContentTypeId.getDefaultInstance()) {
            getTypeBuilder().mergeFrom(value);
          } else {
            type_ = value;
          }
        } else {
          typeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * content type identifier used to match the payload with
       * the correct decoding machinery
       * </pre>
       *
       * <code>.xmtp.message_contents.ContentTypeId type = 1;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = null;
        if (typeBuilder_ != null) {
          typeBuilder_.dispose();
          typeBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * content type identifier used to match the payload with
       * the correct decoding machinery
       * </pre>
       *
       * <code>.xmtp.message_contents.ContentTypeId type = 1;</code>
       */
      public org.xmtp.proto.message.contents.Content.ContentTypeId.Builder getTypeBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getTypeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * content type identifier used to match the payload with
       * the correct decoding machinery
       * </pre>
       *
       * <code>.xmtp.message_contents.ContentTypeId type = 1;</code>
       */
      public org.xmtp.proto.message.contents.Content.ContentTypeIdOrBuilder getTypeOrBuilder() {
        if (typeBuilder_ != null) {
          return typeBuilder_.getMessageOrBuilder();
        } else {
          return type_ == null ?
              org.xmtp.proto.message.contents.Content.ContentTypeId.getDefaultInstance() : type_;
        }
      }
      /**
       * <pre>
       * content type identifier used to match the payload with
       * the correct decoding machinery
       * </pre>
       *
       * <code>.xmtp.message_contents.ContentTypeId type = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.xmtp.proto.message.contents.Content.ContentTypeId, org.xmtp.proto.message.contents.Content.ContentTypeId.Builder, org.xmtp.proto.message.contents.Content.ContentTypeIdOrBuilder> 
          getTypeFieldBuilder() {
        if (typeBuilder_ == null) {
          typeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.xmtp.proto.message.contents.Content.ContentTypeId, org.xmtp.proto.message.contents.Content.ContentTypeId.Builder, org.xmtp.proto.message.contents.Content.ContentTypeIdOrBuilder>(
                  getType(),
                  getParentForChildren(),
                  isClean());
          type_ = null;
        }
        return typeBuilder_;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> parameters_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
          internalGetParameters() {
        if (parameters_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              ParametersDefaultEntryHolder.defaultEntry);
        }
        return parameters_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
          internalGetMutableParameters() {
        if (parameters_ == null) {
          parameters_ = com.google.protobuf.MapField.newMapField(
              ParametersDefaultEntryHolder.defaultEntry);
        }
        if (!parameters_.isMutable()) {
          parameters_ = parameters_.copy();
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return parameters_;
      }
      public int getParametersCount() {
        return internalGetParameters().getMap().size();
      }
      /**
       * <pre>
       * optional encoding parameters required to correctly decode the content
       * </pre>
       *
       * <code>map&lt;string, string&gt; parameters = 2;</code>
       */
      @java.lang.Override
      public boolean containsParameters(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetParameters().getMap().containsKey(key);
      }
      /**
       * Use {@link #getParametersMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getParameters() {
        return getParametersMap();
      }
      /**
       * <pre>
       * optional encoding parameters required to correctly decode the content
       * </pre>
       *
       * <code>map&lt;string, string&gt; parameters = 2;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.String, java.lang.String> getParametersMap() {
        return internalGetParameters().getMap();
      }
      /**
       * <pre>
       * optional encoding parameters required to correctly decode the content
       * </pre>
       *
       * <code>map&lt;string, string&gt; parameters = 2;</code>
       */
      @java.lang.Override
      public /* nullable */
java.lang.String getParametersOrDefault(
          java.lang.String key,
          /* nullable */
java.lang.String defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetParameters().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * optional encoding parameters required to correctly decode the content
       * </pre>
       *
       * <code>map&lt;string, string&gt; parameters = 2;</code>
       */
      @java.lang.Override
      public java.lang.String getParametersOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetParameters().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      public Builder clearParameters() {
        bitField0_ = (bitField0_ & ~0x00000002);
        internalGetMutableParameters().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * optional encoding parameters required to correctly decode the content
       * </pre>
       *
       * <code>map&lt;string, string&gt; parameters = 2;</code>
       */
      public Builder removeParameters(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        internalGetMutableParameters().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String>
          getMutableParameters() {
        bitField0_ |= 0x00000002;
        return internalGetMutableParameters().getMutableMap();
      }
      /**
       * <pre>
       * optional encoding parameters required to correctly decode the content
       * </pre>
       *
       * <code>map&lt;string, string&gt; parameters = 2;</code>
       */
      public Builder putParameters(
          java.lang.String key,
          java.lang.String value) {
        if (key == null) { throw new NullPointerException("map key"); }
        if (value == null) { throw new NullPointerException("map value"); }
        internalGetMutableParameters().getMutableMap()
            .put(key, value);
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * optional encoding parameters required to correctly decode the content
       * </pre>
       *
       * <code>map&lt;string, string&gt; parameters = 2;</code>
       */
      public Builder putAllParameters(
          java.util.Map<java.lang.String, java.lang.String> values) {
        internalGetMutableParameters().getMutableMap()
            .putAll(values);
        bitField0_ |= 0x00000002;
        return this;
      }

      private java.lang.Object fallback_ = "";
      /**
       * <pre>
       * optional fallback description of the content that can be used in case
       * the client cannot decode or render the content
       * </pre>
       *
       * <code>optional string fallback = 3;</code>
       * @return Whether the fallback field is set.
       */
      public boolean hasFallback() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * optional fallback description of the content that can be used in case
       * the client cannot decode or render the content
       * </pre>
       *
       * <code>optional string fallback = 3;</code>
       * @return The fallback.
       */
      public java.lang.String getFallback() {
        java.lang.Object ref = fallback_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          fallback_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * optional fallback description of the content that can be used in case
       * the client cannot decode or render the content
       * </pre>
       *
       * <code>optional string fallback = 3;</code>
       * @return The bytes for fallback.
       */
      public com.google.protobuf.ByteString
          getFallbackBytes() {
        java.lang.Object ref = fallback_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fallback_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * optional fallback description of the content that can be used in case
       * the client cannot decode or render the content
       * </pre>
       *
       * <code>optional string fallback = 3;</code>
       * @param value The fallback to set.
       * @return This builder for chaining.
       */
      public Builder setFallback(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        fallback_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * optional fallback description of the content that can be used in case
       * the client cannot decode or render the content
       * </pre>
       *
       * <code>optional string fallback = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearFallback() {
        fallback_ = getDefaultInstance().getFallback();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * optional fallback description of the content that can be used in case
       * the client cannot decode or render the content
       * </pre>
       *
       * <code>optional string fallback = 3;</code>
       * @param value The bytes for fallback to set.
       * @return This builder for chaining.
       */
      public Builder setFallbackBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        fallback_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }

      private int compression_ = 0;
      /**
       * <pre>
       * optional compression; the value indicates algorithm used to
       * compress the encoded content bytes
       * </pre>
       *
       * <code>optional .xmtp.message_contents.Compression compression = 5;</code>
       * @return Whether the compression field is set.
       */
      @java.lang.Override public boolean hasCompression() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * optional compression; the value indicates algorithm used to
       * compress the encoded content bytes
       * </pre>
       *
       * <code>optional .xmtp.message_contents.Compression compression = 5;</code>
       * @return The enum numeric value on the wire for compression.
       */
      @java.lang.Override public int getCompressionValue() {
        return compression_;
      }
      /**
       * <pre>
       * optional compression; the value indicates algorithm used to
       * compress the encoded content bytes
       * </pre>
       *
       * <code>optional .xmtp.message_contents.Compression compression = 5;</code>
       * @param value The enum numeric value on the wire for compression to set.
       * @return This builder for chaining.
       */
      public Builder setCompressionValue(int value) {
        compression_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * optional compression; the value indicates algorithm used to
       * compress the encoded content bytes
       * </pre>
       *
       * <code>optional .xmtp.message_contents.Compression compression = 5;</code>
       * @return The compression.
       */
      @java.lang.Override
      public org.xmtp.proto.message.contents.Content.Compression getCompression() {
        org.xmtp.proto.message.contents.Content.Compression result = org.xmtp.proto.message.contents.Content.Compression.forNumber(compression_);
        return result == null ? org.xmtp.proto.message.contents.Content.Compression.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * optional compression; the value indicates algorithm used to
       * compress the encoded content bytes
       * </pre>
       *
       * <code>optional .xmtp.message_contents.Compression compression = 5;</code>
       * @param value The compression to set.
       * @return This builder for chaining.
       */
      public Builder setCompression(org.xmtp.proto.message.contents.Content.Compression value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        compression_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * optional compression; the value indicates algorithm used to
       * compress the encoded content bytes
       * </pre>
       *
       * <code>optional .xmtp.message_contents.Compression compression = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearCompression() {
        bitField0_ = (bitField0_ & ~0x00000008);
        compression_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString content_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * encoded content itself
       * </pre>
       *
       * <code>bytes content = 4;</code>
       * @return The content.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getContent() {
        return content_;
      }
      /**
       * <pre>
       * encoded content itself
       * </pre>
       *
       * <code>bytes content = 4;</code>
       * @param value The content to set.
       * @return This builder for chaining.
       */
      public Builder setContent(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        content_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * encoded content itself
       * </pre>
       *
       * <code>bytes content = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearContent() {
        bitField0_ = (bitField0_ & ~0x00000010);
        content_ = getDefaultInstance().getContent();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:xmtp.message_contents.EncodedContent)
    }

    // @@protoc_insertion_point(class_scope:xmtp.message_contents.EncodedContent)
    private static final org.xmtp.proto.message.contents.Content.EncodedContent DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.xmtp.proto.message.contents.Content.EncodedContent();
    }

    public static org.xmtp.proto.message.contents.Content.EncodedContent getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<EncodedContent>
        PARSER = new com.google.protobuf.AbstractParser<EncodedContent>() {
      @java.lang.Override
      public EncodedContent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<EncodedContent> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<EncodedContent> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.xmtp.proto.message.contents.Content.EncodedContent getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SignedContentOrBuilder extends
      // @@protoc_insertion_point(interface_extends:xmtp.message_contents.SignedContent)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * MUST contain EncodedContent
     * </pre>
     *
     * <code>bytes payload = 1;</code>
     * @return The payload.
     */
    com.google.protobuf.ByteString getPayload();

    /**
     * <code>.xmtp.message_contents.SignedPublicKeyBundle sender = 2;</code>
     * @return Whether the sender field is set.
     */
    boolean hasSender();
    /**
     * <code>.xmtp.message_contents.SignedPublicKeyBundle sender = 2;</code>
     * @return The sender.
     */
    org.xmtp.proto.message.contents.PublicKeyOuterClass.SignedPublicKeyBundle getSender();
    /**
     * <code>.xmtp.message_contents.SignedPublicKeyBundle sender = 2;</code>
     */
    org.xmtp.proto.message.contents.PublicKeyOuterClass.SignedPublicKeyBundleOrBuilder getSenderOrBuilder();

    /**
     * <pre>
     * MUST be a signature of a concatenation of
     * the message header bytes and the payload bytes,
     * signed by the sender's pre-key.
     * </pre>
     *
     * <code>.xmtp.message_contents.Signature signature = 3;</code>
     * @return Whether the signature field is set.
     */
    boolean hasSignature();
    /**
     * <pre>
     * MUST be a signature of a concatenation of
     * the message header bytes and the payload bytes,
     * signed by the sender's pre-key.
     * </pre>
     *
     * <code>.xmtp.message_contents.Signature signature = 3;</code>
     * @return The signature.
     */
    org.xmtp.proto.message.contents.SignatureOuterClass.Signature getSignature();
    /**
     * <pre>
     * MUST be a signature of a concatenation of
     * the message header bytes and the payload bytes,
     * signed by the sender's pre-key.
     * </pre>
     *
     * <code>.xmtp.message_contents.Signature signature = 3;</code>
     */
    org.xmtp.proto.message.contents.SignatureOuterClass.SignatureOrBuilder getSignatureOrBuilder();
  }
  /**
   * <pre>
   * SignedContent attaches a signature to EncodedContent.
   * </pre>
   *
   * Protobuf type {@code xmtp.message_contents.SignedContent}
   */
  public static final class SignedContent extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:xmtp.message_contents.SignedContent)
      SignedContentOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SignedContent.newBuilder() to construct.
    private SignedContent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SignedContent() {
      payload_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SignedContent();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.xmtp.proto.message.contents.Content.internal_static_xmtp_message_contents_SignedContent_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.xmtp.proto.message.contents.Content.internal_static_xmtp_message_contents_SignedContent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.xmtp.proto.message.contents.Content.SignedContent.class, org.xmtp.proto.message.contents.Content.SignedContent.Builder.class);
    }

    public static final int PAYLOAD_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString payload_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * MUST contain EncodedContent
     * </pre>
     *
     * <code>bytes payload = 1;</code>
     * @return The payload.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getPayload() {
      return payload_;
    }

    public static final int SENDER_FIELD_NUMBER = 2;
    private org.xmtp.proto.message.contents.PublicKeyOuterClass.SignedPublicKeyBundle sender_;
    /**
     * <code>.xmtp.message_contents.SignedPublicKeyBundle sender = 2;</code>
     * @return Whether the sender field is set.
     */
    @java.lang.Override
    public boolean hasSender() {
      return sender_ != null;
    }
    /**
     * <code>.xmtp.message_contents.SignedPublicKeyBundle sender = 2;</code>
     * @return The sender.
     */
    @java.lang.Override
    public org.xmtp.proto.message.contents.PublicKeyOuterClass.SignedPublicKeyBundle getSender() {
      return sender_ == null ? org.xmtp.proto.message.contents.PublicKeyOuterClass.SignedPublicKeyBundle.getDefaultInstance() : sender_;
    }
    /**
     * <code>.xmtp.message_contents.SignedPublicKeyBundle sender = 2;</code>
     */
    @java.lang.Override
    public org.xmtp.proto.message.contents.PublicKeyOuterClass.SignedPublicKeyBundleOrBuilder getSenderOrBuilder() {
      return sender_ == null ? org.xmtp.proto.message.contents.PublicKeyOuterClass.SignedPublicKeyBundle.getDefaultInstance() : sender_;
    }

    public static final int SIGNATURE_FIELD_NUMBER = 3;
    private org.xmtp.proto.message.contents.SignatureOuterClass.Signature signature_;
    /**
     * <pre>
     * MUST be a signature of a concatenation of
     * the message header bytes and the payload bytes,
     * signed by the sender's pre-key.
     * </pre>
     *
     * <code>.xmtp.message_contents.Signature signature = 3;</code>
     * @return Whether the signature field is set.
     */
    @java.lang.Override
    public boolean hasSignature() {
      return signature_ != null;
    }
    /**
     * <pre>
     * MUST be a signature of a concatenation of
     * the message header bytes and the payload bytes,
     * signed by the sender's pre-key.
     * </pre>
     *
     * <code>.xmtp.message_contents.Signature signature = 3;</code>
     * @return The signature.
     */
    @java.lang.Override
    public org.xmtp.proto.message.contents.SignatureOuterClass.Signature getSignature() {
      return signature_ == null ? org.xmtp.proto.message.contents.SignatureOuterClass.Signature.getDefaultInstance() : signature_;
    }
    /**
     * <pre>
     * MUST be a signature of a concatenation of
     * the message header bytes and the payload bytes,
     * signed by the sender's pre-key.
     * </pre>
     *
     * <code>.xmtp.message_contents.Signature signature = 3;</code>
     */
    @java.lang.Override
    public org.xmtp.proto.message.contents.SignatureOuterClass.SignatureOrBuilder getSignatureOrBuilder() {
      return signature_ == null ? org.xmtp.proto.message.contents.SignatureOuterClass.Signature.getDefaultInstance() : signature_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!payload_.isEmpty()) {
        output.writeBytes(1, payload_);
      }
      if (sender_ != null) {
        output.writeMessage(2, getSender());
      }
      if (signature_ != null) {
        output.writeMessage(3, getSignature());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!payload_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, payload_);
      }
      if (sender_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getSender());
      }
      if (signature_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getSignature());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.xmtp.proto.message.contents.Content.SignedContent)) {
        return super.equals(obj);
      }
      org.xmtp.proto.message.contents.Content.SignedContent other = (org.xmtp.proto.message.contents.Content.SignedContent) obj;

      if (!getPayload()
          .equals(other.getPayload())) return false;
      if (hasSender() != other.hasSender()) return false;
      if (hasSender()) {
        if (!getSender()
            .equals(other.getSender())) return false;
      }
      if (hasSignature() != other.hasSignature()) return false;
      if (hasSignature()) {
        if (!getSignature()
            .equals(other.getSignature())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PAYLOAD_FIELD_NUMBER;
      hash = (53 * hash) + getPayload().hashCode();
      if (hasSender()) {
        hash = (37 * hash) + SENDER_FIELD_NUMBER;
        hash = (53 * hash) + getSender().hashCode();
      }
      if (hasSignature()) {
        hash = (37 * hash) + SIGNATURE_FIELD_NUMBER;
        hash = (53 * hash) + getSignature().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.xmtp.proto.message.contents.Content.SignedContent parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.xmtp.proto.message.contents.Content.SignedContent parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.xmtp.proto.message.contents.Content.SignedContent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.xmtp.proto.message.contents.Content.SignedContent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.xmtp.proto.message.contents.Content.SignedContent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.xmtp.proto.message.contents.Content.SignedContent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.xmtp.proto.message.contents.Content.SignedContent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.xmtp.proto.message.contents.Content.SignedContent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.xmtp.proto.message.contents.Content.SignedContent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.xmtp.proto.message.contents.Content.SignedContent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.xmtp.proto.message.contents.Content.SignedContent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.xmtp.proto.message.contents.Content.SignedContent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.xmtp.proto.message.contents.Content.SignedContent prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * SignedContent attaches a signature to EncodedContent.
     * </pre>
     *
     * Protobuf type {@code xmtp.message_contents.SignedContent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:xmtp.message_contents.SignedContent)
        org.xmtp.proto.message.contents.Content.SignedContentOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.xmtp.proto.message.contents.Content.internal_static_xmtp_message_contents_SignedContent_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.xmtp.proto.message.contents.Content.internal_static_xmtp_message_contents_SignedContent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.xmtp.proto.message.contents.Content.SignedContent.class, org.xmtp.proto.message.contents.Content.SignedContent.Builder.class);
      }

      // Construct using org.xmtp.proto.message.contents.Content.SignedContent.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        payload_ = com.google.protobuf.ByteString.EMPTY;
        sender_ = null;
        if (senderBuilder_ != null) {
          senderBuilder_.dispose();
          senderBuilder_ = null;
        }
        signature_ = null;
        if (signatureBuilder_ != null) {
          signatureBuilder_.dispose();
          signatureBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.xmtp.proto.message.contents.Content.internal_static_xmtp_message_contents_SignedContent_descriptor;
      }

      @java.lang.Override
      public org.xmtp.proto.message.contents.Content.SignedContent getDefaultInstanceForType() {
        return org.xmtp.proto.message.contents.Content.SignedContent.getDefaultInstance();
      }

      @java.lang.Override
      public org.xmtp.proto.message.contents.Content.SignedContent build() {
        org.xmtp.proto.message.contents.Content.SignedContent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.xmtp.proto.message.contents.Content.SignedContent buildPartial() {
        org.xmtp.proto.message.contents.Content.SignedContent result = new org.xmtp.proto.message.contents.Content.SignedContent(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.xmtp.proto.message.contents.Content.SignedContent result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.payload_ = payload_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.sender_ = senderBuilder_ == null
              ? sender_
              : senderBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.signature_ = signatureBuilder_ == null
              ? signature_
              : signatureBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.xmtp.proto.message.contents.Content.SignedContent) {
          return mergeFrom((org.xmtp.proto.message.contents.Content.SignedContent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.xmtp.proto.message.contents.Content.SignedContent other) {
        if (other == org.xmtp.proto.message.contents.Content.SignedContent.getDefaultInstance()) return this;
        if (other.getPayload() != com.google.protobuf.ByteString.EMPTY) {
          setPayload(other.getPayload());
        }
        if (other.hasSender()) {
          mergeSender(other.getSender());
        }
        if (other.hasSignature()) {
          mergeSignature(other.getSignature());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                payload_ = input.readBytes();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getSenderFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getSignatureFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString payload_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * MUST contain EncodedContent
       * </pre>
       *
       * <code>bytes payload = 1;</code>
       * @return The payload.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getPayload() {
        return payload_;
      }
      /**
       * <pre>
       * MUST contain EncodedContent
       * </pre>
       *
       * <code>bytes payload = 1;</code>
       * @param value The payload to set.
       * @return This builder for chaining.
       */
      public Builder setPayload(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        payload_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * MUST contain EncodedContent
       * </pre>
       *
       * <code>bytes payload = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearPayload() {
        bitField0_ = (bitField0_ & ~0x00000001);
        payload_ = getDefaultInstance().getPayload();
        onChanged();
        return this;
      }

      private org.xmtp.proto.message.contents.PublicKeyOuterClass.SignedPublicKeyBundle sender_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.xmtp.proto.message.contents.PublicKeyOuterClass.SignedPublicKeyBundle, org.xmtp.proto.message.contents.PublicKeyOuterClass.SignedPublicKeyBundle.Builder, org.xmtp.proto.message.contents.PublicKeyOuterClass.SignedPublicKeyBundleOrBuilder> senderBuilder_;
      /**
       * <code>.xmtp.message_contents.SignedPublicKeyBundle sender = 2;</code>
       * @return Whether the sender field is set.
       */
      public boolean hasSender() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>.xmtp.message_contents.SignedPublicKeyBundle sender = 2;</code>
       * @return The sender.
       */
      public org.xmtp.proto.message.contents.PublicKeyOuterClass.SignedPublicKeyBundle getSender() {
        if (senderBuilder_ == null) {
          return sender_ == null ? org.xmtp.proto.message.contents.PublicKeyOuterClass.SignedPublicKeyBundle.getDefaultInstance() : sender_;
        } else {
          return senderBuilder_.getMessage();
        }
      }
      /**
       * <code>.xmtp.message_contents.SignedPublicKeyBundle sender = 2;</code>
       */
      public Builder setSender(org.xmtp.proto.message.contents.PublicKeyOuterClass.SignedPublicKeyBundle value) {
        if (senderBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sender_ = value;
        } else {
          senderBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.xmtp.message_contents.SignedPublicKeyBundle sender = 2;</code>
       */
      public Builder setSender(
          org.xmtp.proto.message.contents.PublicKeyOuterClass.SignedPublicKeyBundle.Builder builderForValue) {
        if (senderBuilder_ == null) {
          sender_ = builderForValue.build();
        } else {
          senderBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.xmtp.message_contents.SignedPublicKeyBundle sender = 2;</code>
       */
      public Builder mergeSender(org.xmtp.proto.message.contents.PublicKeyOuterClass.SignedPublicKeyBundle value) {
        if (senderBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            sender_ != null &&
            sender_ != org.xmtp.proto.message.contents.PublicKeyOuterClass.SignedPublicKeyBundle.getDefaultInstance()) {
            getSenderBuilder().mergeFrom(value);
          } else {
            sender_ = value;
          }
        } else {
          senderBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.xmtp.message_contents.SignedPublicKeyBundle sender = 2;</code>
       */
      public Builder clearSender() {
        bitField0_ = (bitField0_ & ~0x00000002);
        sender_ = null;
        if (senderBuilder_ != null) {
          senderBuilder_.dispose();
          senderBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.xmtp.message_contents.SignedPublicKeyBundle sender = 2;</code>
       */
      public org.xmtp.proto.message.contents.PublicKeyOuterClass.SignedPublicKeyBundle.Builder getSenderBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getSenderFieldBuilder().getBuilder();
      }
      /**
       * <code>.xmtp.message_contents.SignedPublicKeyBundle sender = 2;</code>
       */
      public org.xmtp.proto.message.contents.PublicKeyOuterClass.SignedPublicKeyBundleOrBuilder getSenderOrBuilder() {
        if (senderBuilder_ != null) {
          return senderBuilder_.getMessageOrBuilder();
        } else {
          return sender_ == null ?
              org.xmtp.proto.message.contents.PublicKeyOuterClass.SignedPublicKeyBundle.getDefaultInstance() : sender_;
        }
      }
      /**
       * <code>.xmtp.message_contents.SignedPublicKeyBundle sender = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.xmtp.proto.message.contents.PublicKeyOuterClass.SignedPublicKeyBundle, org.xmtp.proto.message.contents.PublicKeyOuterClass.SignedPublicKeyBundle.Builder, org.xmtp.proto.message.contents.PublicKeyOuterClass.SignedPublicKeyBundleOrBuilder> 
          getSenderFieldBuilder() {
        if (senderBuilder_ == null) {
          senderBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.xmtp.proto.message.contents.PublicKeyOuterClass.SignedPublicKeyBundle, org.xmtp.proto.message.contents.PublicKeyOuterClass.SignedPublicKeyBundle.Builder, org.xmtp.proto.message.contents.PublicKeyOuterClass.SignedPublicKeyBundleOrBuilder>(
                  getSender(),
                  getParentForChildren(),
                  isClean());
          sender_ = null;
        }
        return senderBuilder_;
      }

      private org.xmtp.proto.message.contents.SignatureOuterClass.Signature signature_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.xmtp.proto.message.contents.SignatureOuterClass.Signature, org.xmtp.proto.message.contents.SignatureOuterClass.Signature.Builder, org.xmtp.proto.message.contents.SignatureOuterClass.SignatureOrBuilder> signatureBuilder_;
      /**
       * <pre>
       * MUST be a signature of a concatenation of
       * the message header bytes and the payload bytes,
       * signed by the sender's pre-key.
       * </pre>
       *
       * <code>.xmtp.message_contents.Signature signature = 3;</code>
       * @return Whether the signature field is set.
       */
      public boolean hasSignature() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * MUST be a signature of a concatenation of
       * the message header bytes and the payload bytes,
       * signed by the sender's pre-key.
       * </pre>
       *
       * <code>.xmtp.message_contents.Signature signature = 3;</code>
       * @return The signature.
       */
      public org.xmtp.proto.message.contents.SignatureOuterClass.Signature getSignature() {
        if (signatureBuilder_ == null) {
          return signature_ == null ? org.xmtp.proto.message.contents.SignatureOuterClass.Signature.getDefaultInstance() : signature_;
        } else {
          return signatureBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * MUST be a signature of a concatenation of
       * the message header bytes and the payload bytes,
       * signed by the sender's pre-key.
       * </pre>
       *
       * <code>.xmtp.message_contents.Signature signature = 3;</code>
       */
      public Builder setSignature(org.xmtp.proto.message.contents.SignatureOuterClass.Signature value) {
        if (signatureBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          signature_ = value;
        } else {
          signatureBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * MUST be a signature of a concatenation of
       * the message header bytes and the payload bytes,
       * signed by the sender's pre-key.
       * </pre>
       *
       * <code>.xmtp.message_contents.Signature signature = 3;</code>
       */
      public Builder setSignature(
          org.xmtp.proto.message.contents.SignatureOuterClass.Signature.Builder builderForValue) {
        if (signatureBuilder_ == null) {
          signature_ = builderForValue.build();
        } else {
          signatureBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * MUST be a signature of a concatenation of
       * the message header bytes and the payload bytes,
       * signed by the sender's pre-key.
       * </pre>
       *
       * <code>.xmtp.message_contents.Signature signature = 3;</code>
       */
      public Builder mergeSignature(org.xmtp.proto.message.contents.SignatureOuterClass.Signature value) {
        if (signatureBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            signature_ != null &&
            signature_ != org.xmtp.proto.message.contents.SignatureOuterClass.Signature.getDefaultInstance()) {
            getSignatureBuilder().mergeFrom(value);
          } else {
            signature_ = value;
          }
        } else {
          signatureBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * MUST be a signature of a concatenation of
       * the message header bytes and the payload bytes,
       * signed by the sender's pre-key.
       * </pre>
       *
       * <code>.xmtp.message_contents.Signature signature = 3;</code>
       */
      public Builder clearSignature() {
        bitField0_ = (bitField0_ & ~0x00000004);
        signature_ = null;
        if (signatureBuilder_ != null) {
          signatureBuilder_.dispose();
          signatureBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * MUST be a signature of a concatenation of
       * the message header bytes and the payload bytes,
       * signed by the sender's pre-key.
       * </pre>
       *
       * <code>.xmtp.message_contents.Signature signature = 3;</code>
       */
      public org.xmtp.proto.message.contents.SignatureOuterClass.Signature.Builder getSignatureBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getSignatureFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * MUST be a signature of a concatenation of
       * the message header bytes and the payload bytes,
       * signed by the sender's pre-key.
       * </pre>
       *
       * <code>.xmtp.message_contents.Signature signature = 3;</code>
       */
      public org.xmtp.proto.message.contents.SignatureOuterClass.SignatureOrBuilder getSignatureOrBuilder() {
        if (signatureBuilder_ != null) {
          return signatureBuilder_.getMessageOrBuilder();
        } else {
          return signature_ == null ?
              org.xmtp.proto.message.contents.SignatureOuterClass.Signature.getDefaultInstance() : signature_;
        }
      }
      /**
       * <pre>
       * MUST be a signature of a concatenation of
       * the message header bytes and the payload bytes,
       * signed by the sender's pre-key.
       * </pre>
       *
       * <code>.xmtp.message_contents.Signature signature = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.xmtp.proto.message.contents.SignatureOuterClass.Signature, org.xmtp.proto.message.contents.SignatureOuterClass.Signature.Builder, org.xmtp.proto.message.contents.SignatureOuterClass.SignatureOrBuilder> 
          getSignatureFieldBuilder() {
        if (signatureBuilder_ == null) {
          signatureBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.xmtp.proto.message.contents.SignatureOuterClass.Signature, org.xmtp.proto.message.contents.SignatureOuterClass.Signature.Builder, org.xmtp.proto.message.contents.SignatureOuterClass.SignatureOrBuilder>(
                  getSignature(),
                  getParentForChildren(),
                  isClean());
          signature_ = null;
        }
        return signatureBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:xmtp.message_contents.SignedContent)
    }

    // @@protoc_insertion_point(class_scope:xmtp.message_contents.SignedContent)
    private static final org.xmtp.proto.message.contents.Content.SignedContent DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.xmtp.proto.message.contents.Content.SignedContent();
    }

    public static org.xmtp.proto.message.contents.Content.SignedContent getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SignedContent>
        PARSER = new com.google.protobuf.AbstractParser<SignedContent>() {
      @java.lang.Override
      public SignedContent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<SignedContent> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SignedContent> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.xmtp.proto.message.contents.Content.SignedContent getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_xmtp_message_contents_ContentTypeId_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_xmtp_message_contents_ContentTypeId_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_xmtp_message_contents_EncodedContent_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_xmtp_message_contents_EncodedContent_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_xmtp_message_contents_EncodedContent_ParametersEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_xmtp_message_contents_EncodedContent_ParametersEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_xmtp_message_contents_SignedContent_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_xmtp_message_contents_SignedContent_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\036message_contents/content.proto\022\025xmtp.m" +
      "essage_contents\032!message_contents/public" +
      "_key.proto\032 message_contents/signature.p" +
      "roto\"d\n\rContentTypeId\022\024\n\014authority_id\030\001 " +
      "\001(\t\022\017\n\007type_id\030\002 \001(\t\022\025\n\rversion_major\030\003 " +
      "\001(\r\022\025\n\rversion_minor\030\004 \001(\r\"\305\002\n\016EncodedCo" +
      "ntent\0222\n\004type\030\001 \001(\0132$.xmtp.message_conte" +
      "nts.ContentTypeId\022I\n\nparameters\030\002 \003(\01325." +
      "xmtp.message_contents.EncodedContent.Par" +
      "ametersEntry\022\025\n\010fallback\030\003 \001(\tH\000\210\001\001\022<\n\013c" +
      "ompression\030\005 \001(\0162\".xmtp.message_contents" +
      ".CompressionH\001\210\001\001\022\017\n\007content\030\004 \001(\014\0321\n\017Pa" +
      "rametersEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(" +
      "\t:\0028\001B\013\n\t_fallbackB\016\n\014_compression\"\223\001\n\rS" +
      "ignedContent\022\017\n\007payload\030\001 \001(\014\022<\n\006sender\030" +
      "\002 \001(\0132,.xmtp.message_contents.SignedPubl" +
      "icKeyBundle\0223\n\tsignature\030\003 \001(\0132 .xmtp.me" +
      "ssage_contents.Signature*<\n\013Compression\022" +
      "\027\n\023COMPRESSION_DEFLATE\020\000\022\024\n\020COMPRESSION_" +
      "GZIP\020\001BO\n\037org.xmtp.proto.message.content" +
      "sZ,github.com/xmtp/proto/v3/go/message_c" +
      "ontentsb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.xmtp.proto.message.contents.PublicKeyOuterClass.getDescriptor(),
          org.xmtp.proto.message.contents.SignatureOuterClass.getDescriptor(),
        });
    internal_static_xmtp_message_contents_ContentTypeId_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_xmtp_message_contents_ContentTypeId_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_xmtp_message_contents_ContentTypeId_descriptor,
        new java.lang.String[] { "AuthorityId", "TypeId", "VersionMajor", "VersionMinor", });
    internal_static_xmtp_message_contents_EncodedContent_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_xmtp_message_contents_EncodedContent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_xmtp_message_contents_EncodedContent_descriptor,
        new java.lang.String[] { "Type", "Parameters", "Fallback", "Compression", "Content", "Fallback", "Compression", });
    internal_static_xmtp_message_contents_EncodedContent_ParametersEntry_descriptor =
      internal_static_xmtp_message_contents_EncodedContent_descriptor.getNestedTypes().get(0);
    internal_static_xmtp_message_contents_EncodedContent_ParametersEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_xmtp_message_contents_EncodedContent_ParametersEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_xmtp_message_contents_SignedContent_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_xmtp_message_contents_SignedContent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_xmtp_message_contents_SignedContent_descriptor,
        new java.lang.String[] { "Payload", "Sender", "Signature", });
    org.xmtp.proto.message.contents.PublicKeyOuterClass.getDescriptor();
    org.xmtp.proto.message.contents.SignatureOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
