// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message_contents/contact.proto

package org.xmtp.proto.message.contents;

public final class Contact {
  private Contact() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ContactBundleV1OrBuilder extends
      // @@protoc_insertion_point(interface_extends:xmtp.message_contents.ContactBundleV1)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.xmtp.message_contents.PublicKeyBundle key_bundle = 1;</code>
     * @return Whether the keyBundle field is set.
     */
    boolean hasKeyBundle();
    /**
     * <code>.xmtp.message_contents.PublicKeyBundle key_bundle = 1;</code>
     * @return The keyBundle.
     */
    org.xmtp.proto.message.contents.PublicKeyOuterClass.PublicKeyBundle getKeyBundle();
    /**
     * <code>.xmtp.message_contents.PublicKeyBundle key_bundle = 1;</code>
     */
    org.xmtp.proto.message.contents.PublicKeyOuterClass.PublicKeyBundleOrBuilder getKeyBundleOrBuilder();
  }
  /**
   * <pre>
   * LEGACY: User key bundle V1 using PublicKeys.
   * The PublicKeys MUST be signed.
   * </pre>
   *
   * Protobuf type {@code xmtp.message_contents.ContactBundleV1}
   */
  public static final class ContactBundleV1 extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:xmtp.message_contents.ContactBundleV1)
      ContactBundleV1OrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ContactBundleV1.newBuilder() to construct.
    private ContactBundleV1(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ContactBundleV1() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ContactBundleV1();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.xmtp.proto.message.contents.Contact.internal_static_xmtp_message_contents_ContactBundleV1_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.xmtp.proto.message.contents.Contact.internal_static_xmtp_message_contents_ContactBundleV1_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.xmtp.proto.message.contents.Contact.ContactBundleV1.class, org.xmtp.proto.message.contents.Contact.ContactBundleV1.Builder.class);
    }

    public static final int KEY_BUNDLE_FIELD_NUMBER = 1;
    private org.xmtp.proto.message.contents.PublicKeyOuterClass.PublicKeyBundle keyBundle_;
    /**
     * <code>.xmtp.message_contents.PublicKeyBundle key_bundle = 1;</code>
     * @return Whether the keyBundle field is set.
     */
    @java.lang.Override
    public boolean hasKeyBundle() {
      return keyBundle_ != null;
    }
    /**
     * <code>.xmtp.message_contents.PublicKeyBundle key_bundle = 1;</code>
     * @return The keyBundle.
     */
    @java.lang.Override
    public org.xmtp.proto.message.contents.PublicKeyOuterClass.PublicKeyBundle getKeyBundle() {
      return keyBundle_ == null ? org.xmtp.proto.message.contents.PublicKeyOuterClass.PublicKeyBundle.getDefaultInstance() : keyBundle_;
    }
    /**
     * <code>.xmtp.message_contents.PublicKeyBundle key_bundle = 1;</code>
     */
    @java.lang.Override
    public org.xmtp.proto.message.contents.PublicKeyOuterClass.PublicKeyBundleOrBuilder getKeyBundleOrBuilder() {
      return keyBundle_ == null ? org.xmtp.proto.message.contents.PublicKeyOuterClass.PublicKeyBundle.getDefaultInstance() : keyBundle_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (keyBundle_ != null) {
        output.writeMessage(1, getKeyBundle());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (keyBundle_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getKeyBundle());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.xmtp.proto.message.contents.Contact.ContactBundleV1)) {
        return super.equals(obj);
      }
      org.xmtp.proto.message.contents.Contact.ContactBundleV1 other = (org.xmtp.proto.message.contents.Contact.ContactBundleV1) obj;

      if (hasKeyBundle() != other.hasKeyBundle()) return false;
      if (hasKeyBundle()) {
        if (!getKeyBundle()
            .equals(other.getKeyBundle())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasKeyBundle()) {
        hash = (37 * hash) + KEY_BUNDLE_FIELD_NUMBER;
        hash = (53 * hash) + getKeyBundle().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.xmtp.proto.message.contents.Contact.ContactBundleV1 parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.xmtp.proto.message.contents.Contact.ContactBundleV1 parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.xmtp.proto.message.contents.Contact.ContactBundleV1 parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.xmtp.proto.message.contents.Contact.ContactBundleV1 parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.xmtp.proto.message.contents.Contact.ContactBundleV1 parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.xmtp.proto.message.contents.Contact.ContactBundleV1 parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.xmtp.proto.message.contents.Contact.ContactBundleV1 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.xmtp.proto.message.contents.Contact.ContactBundleV1 parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.xmtp.proto.message.contents.Contact.ContactBundleV1 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.xmtp.proto.message.contents.Contact.ContactBundleV1 parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.xmtp.proto.message.contents.Contact.ContactBundleV1 parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.xmtp.proto.message.contents.Contact.ContactBundleV1 parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.xmtp.proto.message.contents.Contact.ContactBundleV1 prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * LEGACY: User key bundle V1 using PublicKeys.
     * The PublicKeys MUST be signed.
     * </pre>
     *
     * Protobuf type {@code xmtp.message_contents.ContactBundleV1}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:xmtp.message_contents.ContactBundleV1)
        org.xmtp.proto.message.contents.Contact.ContactBundleV1OrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.xmtp.proto.message.contents.Contact.internal_static_xmtp_message_contents_ContactBundleV1_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.xmtp.proto.message.contents.Contact.internal_static_xmtp_message_contents_ContactBundleV1_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.xmtp.proto.message.contents.Contact.ContactBundleV1.class, org.xmtp.proto.message.contents.Contact.ContactBundleV1.Builder.class);
      }

      // Construct using org.xmtp.proto.message.contents.Contact.ContactBundleV1.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        keyBundle_ = null;
        if (keyBundleBuilder_ != null) {
          keyBundleBuilder_.dispose();
          keyBundleBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.xmtp.proto.message.contents.Contact.internal_static_xmtp_message_contents_ContactBundleV1_descriptor;
      }

      @java.lang.Override
      public org.xmtp.proto.message.contents.Contact.ContactBundleV1 getDefaultInstanceForType() {
        return org.xmtp.proto.message.contents.Contact.ContactBundleV1.getDefaultInstance();
      }

      @java.lang.Override
      public org.xmtp.proto.message.contents.Contact.ContactBundleV1 build() {
        org.xmtp.proto.message.contents.Contact.ContactBundleV1 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.xmtp.proto.message.contents.Contact.ContactBundleV1 buildPartial() {
        org.xmtp.proto.message.contents.Contact.ContactBundleV1 result = new org.xmtp.proto.message.contents.Contact.ContactBundleV1(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.xmtp.proto.message.contents.Contact.ContactBundleV1 result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.keyBundle_ = keyBundleBuilder_ == null
              ? keyBundle_
              : keyBundleBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.xmtp.proto.message.contents.Contact.ContactBundleV1) {
          return mergeFrom((org.xmtp.proto.message.contents.Contact.ContactBundleV1)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.xmtp.proto.message.contents.Contact.ContactBundleV1 other) {
        if (other == org.xmtp.proto.message.contents.Contact.ContactBundleV1.getDefaultInstance()) return this;
        if (other.hasKeyBundle()) {
          mergeKeyBundle(other.getKeyBundle());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getKeyBundleFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private org.xmtp.proto.message.contents.PublicKeyOuterClass.PublicKeyBundle keyBundle_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.xmtp.proto.message.contents.PublicKeyOuterClass.PublicKeyBundle, org.xmtp.proto.message.contents.PublicKeyOuterClass.PublicKeyBundle.Builder, org.xmtp.proto.message.contents.PublicKeyOuterClass.PublicKeyBundleOrBuilder> keyBundleBuilder_;
      /**
       * <code>.xmtp.message_contents.PublicKeyBundle key_bundle = 1;</code>
       * @return Whether the keyBundle field is set.
       */
      public boolean hasKeyBundle() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>.xmtp.message_contents.PublicKeyBundle key_bundle = 1;</code>
       * @return The keyBundle.
       */
      public org.xmtp.proto.message.contents.PublicKeyOuterClass.PublicKeyBundle getKeyBundle() {
        if (keyBundleBuilder_ == null) {
          return keyBundle_ == null ? org.xmtp.proto.message.contents.PublicKeyOuterClass.PublicKeyBundle.getDefaultInstance() : keyBundle_;
        } else {
          return keyBundleBuilder_.getMessage();
        }
      }
      /**
       * <code>.xmtp.message_contents.PublicKeyBundle key_bundle = 1;</code>
       */
      public Builder setKeyBundle(org.xmtp.proto.message.contents.PublicKeyOuterClass.PublicKeyBundle value) {
        if (keyBundleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          keyBundle_ = value;
        } else {
          keyBundleBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.xmtp.message_contents.PublicKeyBundle key_bundle = 1;</code>
       */
      public Builder setKeyBundle(
          org.xmtp.proto.message.contents.PublicKeyOuterClass.PublicKeyBundle.Builder builderForValue) {
        if (keyBundleBuilder_ == null) {
          keyBundle_ = builderForValue.build();
        } else {
          keyBundleBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.xmtp.message_contents.PublicKeyBundle key_bundle = 1;</code>
       */
      public Builder mergeKeyBundle(org.xmtp.proto.message.contents.PublicKeyOuterClass.PublicKeyBundle value) {
        if (keyBundleBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            keyBundle_ != null &&
            keyBundle_ != org.xmtp.proto.message.contents.PublicKeyOuterClass.PublicKeyBundle.getDefaultInstance()) {
            getKeyBundleBuilder().mergeFrom(value);
          } else {
            keyBundle_ = value;
          }
        } else {
          keyBundleBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.xmtp.message_contents.PublicKeyBundle key_bundle = 1;</code>
       */
      public Builder clearKeyBundle() {
        bitField0_ = (bitField0_ & ~0x00000001);
        keyBundle_ = null;
        if (keyBundleBuilder_ != null) {
          keyBundleBuilder_.dispose();
          keyBundleBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.xmtp.message_contents.PublicKeyBundle key_bundle = 1;</code>
       */
      public org.xmtp.proto.message.contents.PublicKeyOuterClass.PublicKeyBundle.Builder getKeyBundleBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getKeyBundleFieldBuilder().getBuilder();
      }
      /**
       * <code>.xmtp.message_contents.PublicKeyBundle key_bundle = 1;</code>
       */
      public org.xmtp.proto.message.contents.PublicKeyOuterClass.PublicKeyBundleOrBuilder getKeyBundleOrBuilder() {
        if (keyBundleBuilder_ != null) {
          return keyBundleBuilder_.getMessageOrBuilder();
        } else {
          return keyBundle_ == null ?
              org.xmtp.proto.message.contents.PublicKeyOuterClass.PublicKeyBundle.getDefaultInstance() : keyBundle_;
        }
      }
      /**
       * <code>.xmtp.message_contents.PublicKeyBundle key_bundle = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.xmtp.proto.message.contents.PublicKeyOuterClass.PublicKeyBundle, org.xmtp.proto.message.contents.PublicKeyOuterClass.PublicKeyBundle.Builder, org.xmtp.proto.message.contents.PublicKeyOuterClass.PublicKeyBundleOrBuilder> 
          getKeyBundleFieldBuilder() {
        if (keyBundleBuilder_ == null) {
          keyBundleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.xmtp.proto.message.contents.PublicKeyOuterClass.PublicKeyBundle, org.xmtp.proto.message.contents.PublicKeyOuterClass.PublicKeyBundle.Builder, org.xmtp.proto.message.contents.PublicKeyOuterClass.PublicKeyBundleOrBuilder>(
                  getKeyBundle(),
                  getParentForChildren(),
                  isClean());
          keyBundle_ = null;
        }
        return keyBundleBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:xmtp.message_contents.ContactBundleV1)
    }

    // @@protoc_insertion_point(class_scope:xmtp.message_contents.ContactBundleV1)
    private static final org.xmtp.proto.message.contents.Contact.ContactBundleV1 DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.xmtp.proto.message.contents.Contact.ContactBundleV1();
    }

    public static org.xmtp.proto.message.contents.Contact.ContactBundleV1 getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ContactBundleV1>
        PARSER = new com.google.protobuf.AbstractParser<ContactBundleV1>() {
      @java.lang.Override
      public ContactBundleV1 parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ContactBundleV1> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ContactBundleV1> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.xmtp.proto.message.contents.Contact.ContactBundleV1 getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ContactBundleV2OrBuilder extends
      // @@protoc_insertion_point(interface_extends:xmtp.message_contents.ContactBundleV2)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.xmtp.message_contents.SignedPublicKeyBundle key_bundle = 1;</code>
     * @return Whether the keyBundle field is set.
     */
    boolean hasKeyBundle();
    /**
     * <code>.xmtp.message_contents.SignedPublicKeyBundle key_bundle = 1;</code>
     * @return The keyBundle.
     */
    org.xmtp.proto.message.contents.PublicKeyOuterClass.SignedPublicKeyBundle getKeyBundle();
    /**
     * <code>.xmtp.message_contents.SignedPublicKeyBundle key_bundle = 1;</code>
     */
    org.xmtp.proto.message.contents.PublicKeyOuterClass.SignedPublicKeyBundleOrBuilder getKeyBundleOrBuilder();
  }
  /**
   * <pre>
   * User key bundle V2 using SignedPublicKeys.
   * </pre>
   *
   * Protobuf type {@code xmtp.message_contents.ContactBundleV2}
   */
  public static final class ContactBundleV2 extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:xmtp.message_contents.ContactBundleV2)
      ContactBundleV2OrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ContactBundleV2.newBuilder() to construct.
    private ContactBundleV2(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ContactBundleV2() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ContactBundleV2();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.xmtp.proto.message.contents.Contact.internal_static_xmtp_message_contents_ContactBundleV2_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.xmtp.proto.message.contents.Contact.internal_static_xmtp_message_contents_ContactBundleV2_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.xmtp.proto.message.contents.Contact.ContactBundleV2.class, org.xmtp.proto.message.contents.Contact.ContactBundleV2.Builder.class);
    }

    public static final int KEY_BUNDLE_FIELD_NUMBER = 1;
    private org.xmtp.proto.message.contents.PublicKeyOuterClass.SignedPublicKeyBundle keyBundle_;
    /**
     * <code>.xmtp.message_contents.SignedPublicKeyBundle key_bundle = 1;</code>
     * @return Whether the keyBundle field is set.
     */
    @java.lang.Override
    public boolean hasKeyBundle() {
      return keyBundle_ != null;
    }
    /**
     * <code>.xmtp.message_contents.SignedPublicKeyBundle key_bundle = 1;</code>
     * @return The keyBundle.
     */
    @java.lang.Override
    public org.xmtp.proto.message.contents.PublicKeyOuterClass.SignedPublicKeyBundle getKeyBundle() {
      return keyBundle_ == null ? org.xmtp.proto.message.contents.PublicKeyOuterClass.SignedPublicKeyBundle.getDefaultInstance() : keyBundle_;
    }
    /**
     * <code>.xmtp.message_contents.SignedPublicKeyBundle key_bundle = 1;</code>
     */
    @java.lang.Override
    public org.xmtp.proto.message.contents.PublicKeyOuterClass.SignedPublicKeyBundleOrBuilder getKeyBundleOrBuilder() {
      return keyBundle_ == null ? org.xmtp.proto.message.contents.PublicKeyOuterClass.SignedPublicKeyBundle.getDefaultInstance() : keyBundle_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (keyBundle_ != null) {
        output.writeMessage(1, getKeyBundle());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (keyBundle_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getKeyBundle());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.xmtp.proto.message.contents.Contact.ContactBundleV2)) {
        return super.equals(obj);
      }
      org.xmtp.proto.message.contents.Contact.ContactBundleV2 other = (org.xmtp.proto.message.contents.Contact.ContactBundleV2) obj;

      if (hasKeyBundle() != other.hasKeyBundle()) return false;
      if (hasKeyBundle()) {
        if (!getKeyBundle()
            .equals(other.getKeyBundle())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasKeyBundle()) {
        hash = (37 * hash) + KEY_BUNDLE_FIELD_NUMBER;
        hash = (53 * hash) + getKeyBundle().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.xmtp.proto.message.contents.Contact.ContactBundleV2 parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.xmtp.proto.message.contents.Contact.ContactBundleV2 parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.xmtp.proto.message.contents.Contact.ContactBundleV2 parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.xmtp.proto.message.contents.Contact.ContactBundleV2 parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.xmtp.proto.message.contents.Contact.ContactBundleV2 parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.xmtp.proto.message.contents.Contact.ContactBundleV2 parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.xmtp.proto.message.contents.Contact.ContactBundleV2 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.xmtp.proto.message.contents.Contact.ContactBundleV2 parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.xmtp.proto.message.contents.Contact.ContactBundleV2 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.xmtp.proto.message.contents.Contact.ContactBundleV2 parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.xmtp.proto.message.contents.Contact.ContactBundleV2 parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.xmtp.proto.message.contents.Contact.ContactBundleV2 parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.xmtp.proto.message.contents.Contact.ContactBundleV2 prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * User key bundle V2 using SignedPublicKeys.
     * </pre>
     *
     * Protobuf type {@code xmtp.message_contents.ContactBundleV2}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:xmtp.message_contents.ContactBundleV2)
        org.xmtp.proto.message.contents.Contact.ContactBundleV2OrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.xmtp.proto.message.contents.Contact.internal_static_xmtp_message_contents_ContactBundleV2_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.xmtp.proto.message.contents.Contact.internal_static_xmtp_message_contents_ContactBundleV2_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.xmtp.proto.message.contents.Contact.ContactBundleV2.class, org.xmtp.proto.message.contents.Contact.ContactBundleV2.Builder.class);
      }

      // Construct using org.xmtp.proto.message.contents.Contact.ContactBundleV2.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        keyBundle_ = null;
        if (keyBundleBuilder_ != null) {
          keyBundleBuilder_.dispose();
          keyBundleBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.xmtp.proto.message.contents.Contact.internal_static_xmtp_message_contents_ContactBundleV2_descriptor;
      }

      @java.lang.Override
      public org.xmtp.proto.message.contents.Contact.ContactBundleV2 getDefaultInstanceForType() {
        return org.xmtp.proto.message.contents.Contact.ContactBundleV2.getDefaultInstance();
      }

      @java.lang.Override
      public org.xmtp.proto.message.contents.Contact.ContactBundleV2 build() {
        org.xmtp.proto.message.contents.Contact.ContactBundleV2 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.xmtp.proto.message.contents.Contact.ContactBundleV2 buildPartial() {
        org.xmtp.proto.message.contents.Contact.ContactBundleV2 result = new org.xmtp.proto.message.contents.Contact.ContactBundleV2(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.xmtp.proto.message.contents.Contact.ContactBundleV2 result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.keyBundle_ = keyBundleBuilder_ == null
              ? keyBundle_
              : keyBundleBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.xmtp.proto.message.contents.Contact.ContactBundleV2) {
          return mergeFrom((org.xmtp.proto.message.contents.Contact.ContactBundleV2)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.xmtp.proto.message.contents.Contact.ContactBundleV2 other) {
        if (other == org.xmtp.proto.message.contents.Contact.ContactBundleV2.getDefaultInstance()) return this;
        if (other.hasKeyBundle()) {
          mergeKeyBundle(other.getKeyBundle());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getKeyBundleFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private org.xmtp.proto.message.contents.PublicKeyOuterClass.SignedPublicKeyBundle keyBundle_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.xmtp.proto.message.contents.PublicKeyOuterClass.SignedPublicKeyBundle, org.xmtp.proto.message.contents.PublicKeyOuterClass.SignedPublicKeyBundle.Builder, org.xmtp.proto.message.contents.PublicKeyOuterClass.SignedPublicKeyBundleOrBuilder> keyBundleBuilder_;
      /**
       * <code>.xmtp.message_contents.SignedPublicKeyBundle key_bundle = 1;</code>
       * @return Whether the keyBundle field is set.
       */
      public boolean hasKeyBundle() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>.xmtp.message_contents.SignedPublicKeyBundle key_bundle = 1;</code>
       * @return The keyBundle.
       */
      public org.xmtp.proto.message.contents.PublicKeyOuterClass.SignedPublicKeyBundle getKeyBundle() {
        if (keyBundleBuilder_ == null) {
          return keyBundle_ == null ? org.xmtp.proto.message.contents.PublicKeyOuterClass.SignedPublicKeyBundle.getDefaultInstance() : keyBundle_;
        } else {
          return keyBundleBuilder_.getMessage();
        }
      }
      /**
       * <code>.xmtp.message_contents.SignedPublicKeyBundle key_bundle = 1;</code>
       */
      public Builder setKeyBundle(org.xmtp.proto.message.contents.PublicKeyOuterClass.SignedPublicKeyBundle value) {
        if (keyBundleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          keyBundle_ = value;
        } else {
          keyBundleBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.xmtp.message_contents.SignedPublicKeyBundle key_bundle = 1;</code>
       */
      public Builder setKeyBundle(
          org.xmtp.proto.message.contents.PublicKeyOuterClass.SignedPublicKeyBundle.Builder builderForValue) {
        if (keyBundleBuilder_ == null) {
          keyBundle_ = builderForValue.build();
        } else {
          keyBundleBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.xmtp.message_contents.SignedPublicKeyBundle key_bundle = 1;</code>
       */
      public Builder mergeKeyBundle(org.xmtp.proto.message.contents.PublicKeyOuterClass.SignedPublicKeyBundle value) {
        if (keyBundleBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            keyBundle_ != null &&
            keyBundle_ != org.xmtp.proto.message.contents.PublicKeyOuterClass.SignedPublicKeyBundle.getDefaultInstance()) {
            getKeyBundleBuilder().mergeFrom(value);
          } else {
            keyBundle_ = value;
          }
        } else {
          keyBundleBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.xmtp.message_contents.SignedPublicKeyBundle key_bundle = 1;</code>
       */
      public Builder clearKeyBundle() {
        bitField0_ = (bitField0_ & ~0x00000001);
        keyBundle_ = null;
        if (keyBundleBuilder_ != null) {
          keyBundleBuilder_.dispose();
          keyBundleBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.xmtp.message_contents.SignedPublicKeyBundle key_bundle = 1;</code>
       */
      public org.xmtp.proto.message.contents.PublicKeyOuterClass.SignedPublicKeyBundle.Builder getKeyBundleBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getKeyBundleFieldBuilder().getBuilder();
      }
      /**
       * <code>.xmtp.message_contents.SignedPublicKeyBundle key_bundle = 1;</code>
       */
      public org.xmtp.proto.message.contents.PublicKeyOuterClass.SignedPublicKeyBundleOrBuilder getKeyBundleOrBuilder() {
        if (keyBundleBuilder_ != null) {
          return keyBundleBuilder_.getMessageOrBuilder();
        } else {
          return keyBundle_ == null ?
              org.xmtp.proto.message.contents.PublicKeyOuterClass.SignedPublicKeyBundle.getDefaultInstance() : keyBundle_;
        }
      }
      /**
       * <code>.xmtp.message_contents.SignedPublicKeyBundle key_bundle = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.xmtp.proto.message.contents.PublicKeyOuterClass.SignedPublicKeyBundle, org.xmtp.proto.message.contents.PublicKeyOuterClass.SignedPublicKeyBundle.Builder, org.xmtp.proto.message.contents.PublicKeyOuterClass.SignedPublicKeyBundleOrBuilder> 
          getKeyBundleFieldBuilder() {
        if (keyBundleBuilder_ == null) {
          keyBundleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.xmtp.proto.message.contents.PublicKeyOuterClass.SignedPublicKeyBundle, org.xmtp.proto.message.contents.PublicKeyOuterClass.SignedPublicKeyBundle.Builder, org.xmtp.proto.message.contents.PublicKeyOuterClass.SignedPublicKeyBundleOrBuilder>(
                  getKeyBundle(),
                  getParentForChildren(),
                  isClean());
          keyBundle_ = null;
        }
        return keyBundleBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:xmtp.message_contents.ContactBundleV2)
    }

    // @@protoc_insertion_point(class_scope:xmtp.message_contents.ContactBundleV2)
    private static final org.xmtp.proto.message.contents.Contact.ContactBundleV2 DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.xmtp.proto.message.contents.Contact.ContactBundleV2();
    }

    public static org.xmtp.proto.message.contents.Contact.ContactBundleV2 getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ContactBundleV2>
        PARSER = new com.google.protobuf.AbstractParser<ContactBundleV2>() {
      @java.lang.Override
      public ContactBundleV2 parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ContactBundleV2> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ContactBundleV2> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.xmtp.proto.message.contents.Contact.ContactBundleV2 getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ContactBundleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:xmtp.message_contents.ContactBundle)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.xmtp.message_contents.ContactBundleV1 v1 = 1;</code>
     * @return Whether the v1 field is set.
     */
    boolean hasV1();
    /**
     * <code>.xmtp.message_contents.ContactBundleV1 v1 = 1;</code>
     * @return The v1.
     */
    org.xmtp.proto.message.contents.Contact.ContactBundleV1 getV1();
    /**
     * <code>.xmtp.message_contents.ContactBundleV1 v1 = 1;</code>
     */
    org.xmtp.proto.message.contents.Contact.ContactBundleV1OrBuilder getV1OrBuilder();

    /**
     * <code>.xmtp.message_contents.ContactBundleV2 v2 = 2;</code>
     * @return Whether the v2 field is set.
     */
    boolean hasV2();
    /**
     * <code>.xmtp.message_contents.ContactBundleV2 v2 = 2;</code>
     * @return The v2.
     */
    org.xmtp.proto.message.contents.Contact.ContactBundleV2 getV2();
    /**
     * <code>.xmtp.message_contents.ContactBundleV2 v2 = 2;</code>
     */
    org.xmtp.proto.message.contents.Contact.ContactBundleV2OrBuilder getV2OrBuilder();

    public org.xmtp.proto.message.contents.Contact.ContactBundle.VersionCase getVersionCase();
  }
  /**
   * <pre>
   * Versioned ContactBundle
   * </pre>
   *
   * Protobuf type {@code xmtp.message_contents.ContactBundle}
   */
  public static final class ContactBundle extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:xmtp.message_contents.ContactBundle)
      ContactBundleOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ContactBundle.newBuilder() to construct.
    private ContactBundle(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ContactBundle() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ContactBundle();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.xmtp.proto.message.contents.Contact.internal_static_xmtp_message_contents_ContactBundle_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.xmtp.proto.message.contents.Contact.internal_static_xmtp_message_contents_ContactBundle_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.xmtp.proto.message.contents.Contact.ContactBundle.class, org.xmtp.proto.message.contents.Contact.ContactBundle.Builder.class);
    }

    private int versionCase_ = 0;
    private java.lang.Object version_;
    public enum VersionCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      V1(1),
      V2(2),
      VERSION_NOT_SET(0);
      private final int value;
      private VersionCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static VersionCase valueOf(int value) {
        return forNumber(value);
      }

      public static VersionCase forNumber(int value) {
        switch (value) {
          case 1: return V1;
          case 2: return V2;
          case 0: return VERSION_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public VersionCase
    getVersionCase() {
      return VersionCase.forNumber(
          versionCase_);
    }

    public static final int V1_FIELD_NUMBER = 1;
    /**
     * <code>.xmtp.message_contents.ContactBundleV1 v1 = 1;</code>
     * @return Whether the v1 field is set.
     */
    @java.lang.Override
    public boolean hasV1() {
      return versionCase_ == 1;
    }
    /**
     * <code>.xmtp.message_contents.ContactBundleV1 v1 = 1;</code>
     * @return The v1.
     */
    @java.lang.Override
    public org.xmtp.proto.message.contents.Contact.ContactBundleV1 getV1() {
      if (versionCase_ == 1) {
         return (org.xmtp.proto.message.contents.Contact.ContactBundleV1) version_;
      }
      return org.xmtp.proto.message.contents.Contact.ContactBundleV1.getDefaultInstance();
    }
    /**
     * <code>.xmtp.message_contents.ContactBundleV1 v1 = 1;</code>
     */
    @java.lang.Override
    public org.xmtp.proto.message.contents.Contact.ContactBundleV1OrBuilder getV1OrBuilder() {
      if (versionCase_ == 1) {
         return (org.xmtp.proto.message.contents.Contact.ContactBundleV1) version_;
      }
      return org.xmtp.proto.message.contents.Contact.ContactBundleV1.getDefaultInstance();
    }

    public static final int V2_FIELD_NUMBER = 2;
    /**
     * <code>.xmtp.message_contents.ContactBundleV2 v2 = 2;</code>
     * @return Whether the v2 field is set.
     */
    @java.lang.Override
    public boolean hasV2() {
      return versionCase_ == 2;
    }
    /**
     * <code>.xmtp.message_contents.ContactBundleV2 v2 = 2;</code>
     * @return The v2.
     */
    @java.lang.Override
    public org.xmtp.proto.message.contents.Contact.ContactBundleV2 getV2() {
      if (versionCase_ == 2) {
         return (org.xmtp.proto.message.contents.Contact.ContactBundleV2) version_;
      }
      return org.xmtp.proto.message.contents.Contact.ContactBundleV2.getDefaultInstance();
    }
    /**
     * <code>.xmtp.message_contents.ContactBundleV2 v2 = 2;</code>
     */
    @java.lang.Override
    public org.xmtp.proto.message.contents.Contact.ContactBundleV2OrBuilder getV2OrBuilder() {
      if (versionCase_ == 2) {
         return (org.xmtp.proto.message.contents.Contact.ContactBundleV2) version_;
      }
      return org.xmtp.proto.message.contents.Contact.ContactBundleV2.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (versionCase_ == 1) {
        output.writeMessage(1, (org.xmtp.proto.message.contents.Contact.ContactBundleV1) version_);
      }
      if (versionCase_ == 2) {
        output.writeMessage(2, (org.xmtp.proto.message.contents.Contact.ContactBundleV2) version_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (versionCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (org.xmtp.proto.message.contents.Contact.ContactBundleV1) version_);
      }
      if (versionCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (org.xmtp.proto.message.contents.Contact.ContactBundleV2) version_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.xmtp.proto.message.contents.Contact.ContactBundle)) {
        return super.equals(obj);
      }
      org.xmtp.proto.message.contents.Contact.ContactBundle other = (org.xmtp.proto.message.contents.Contact.ContactBundle) obj;

      if (!getVersionCase().equals(other.getVersionCase())) return false;
      switch (versionCase_) {
        case 1:
          if (!getV1()
              .equals(other.getV1())) return false;
          break;
        case 2:
          if (!getV2()
              .equals(other.getV2())) return false;
          break;
        case 0:
        default:
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (versionCase_) {
        case 1:
          hash = (37 * hash) + V1_FIELD_NUMBER;
          hash = (53 * hash) + getV1().hashCode();
          break;
        case 2:
          hash = (37 * hash) + V2_FIELD_NUMBER;
          hash = (53 * hash) + getV2().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.xmtp.proto.message.contents.Contact.ContactBundle parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.xmtp.proto.message.contents.Contact.ContactBundle parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.xmtp.proto.message.contents.Contact.ContactBundle parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.xmtp.proto.message.contents.Contact.ContactBundle parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.xmtp.proto.message.contents.Contact.ContactBundle parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.xmtp.proto.message.contents.Contact.ContactBundle parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.xmtp.proto.message.contents.Contact.ContactBundle parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.xmtp.proto.message.contents.Contact.ContactBundle parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.xmtp.proto.message.contents.Contact.ContactBundle parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.xmtp.proto.message.contents.Contact.ContactBundle parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.xmtp.proto.message.contents.Contact.ContactBundle parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.xmtp.proto.message.contents.Contact.ContactBundle parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.xmtp.proto.message.contents.Contact.ContactBundle prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Versioned ContactBundle
     * </pre>
     *
     * Protobuf type {@code xmtp.message_contents.ContactBundle}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:xmtp.message_contents.ContactBundle)
        org.xmtp.proto.message.contents.Contact.ContactBundleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.xmtp.proto.message.contents.Contact.internal_static_xmtp_message_contents_ContactBundle_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.xmtp.proto.message.contents.Contact.internal_static_xmtp_message_contents_ContactBundle_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.xmtp.proto.message.contents.Contact.ContactBundle.class, org.xmtp.proto.message.contents.Contact.ContactBundle.Builder.class);
      }

      // Construct using org.xmtp.proto.message.contents.Contact.ContactBundle.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (v1Builder_ != null) {
          v1Builder_.clear();
        }
        if (v2Builder_ != null) {
          v2Builder_.clear();
        }
        versionCase_ = 0;
        version_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.xmtp.proto.message.contents.Contact.internal_static_xmtp_message_contents_ContactBundle_descriptor;
      }

      @java.lang.Override
      public org.xmtp.proto.message.contents.Contact.ContactBundle getDefaultInstanceForType() {
        return org.xmtp.proto.message.contents.Contact.ContactBundle.getDefaultInstance();
      }

      @java.lang.Override
      public org.xmtp.proto.message.contents.Contact.ContactBundle build() {
        org.xmtp.proto.message.contents.Contact.ContactBundle result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.xmtp.proto.message.contents.Contact.ContactBundle buildPartial() {
        org.xmtp.proto.message.contents.Contact.ContactBundle result = new org.xmtp.proto.message.contents.Contact.ContactBundle(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        buildPartialOneofs(result);
        onBuilt();
        return result;
      }

      private void buildPartial0(org.xmtp.proto.message.contents.Contact.ContactBundle result) {
        int from_bitField0_ = bitField0_;
      }

      private void buildPartialOneofs(org.xmtp.proto.message.contents.Contact.ContactBundle result) {
        result.versionCase_ = versionCase_;
        result.version_ = this.version_;
        if (versionCase_ == 1 &&
            v1Builder_ != null) {
          result.version_ = v1Builder_.build();
        }
        if (versionCase_ == 2 &&
            v2Builder_ != null) {
          result.version_ = v2Builder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.xmtp.proto.message.contents.Contact.ContactBundle) {
          return mergeFrom((org.xmtp.proto.message.contents.Contact.ContactBundle)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.xmtp.proto.message.contents.Contact.ContactBundle other) {
        if (other == org.xmtp.proto.message.contents.Contact.ContactBundle.getDefaultInstance()) return this;
        switch (other.getVersionCase()) {
          case V1: {
            mergeV1(other.getV1());
            break;
          }
          case V2: {
            mergeV2(other.getV2());
            break;
          }
          case VERSION_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getV1FieldBuilder().getBuilder(),
                    extensionRegistry);
                versionCase_ = 1;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getV2FieldBuilder().getBuilder(),
                    extensionRegistry);
                versionCase_ = 2;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int versionCase_ = 0;
      private java.lang.Object version_;
      public VersionCase
          getVersionCase() {
        return VersionCase.forNumber(
            versionCase_);
      }

      public Builder clearVersion() {
        versionCase_ = 0;
        version_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private com.google.protobuf.SingleFieldBuilderV3<
          org.xmtp.proto.message.contents.Contact.ContactBundleV1, org.xmtp.proto.message.contents.Contact.ContactBundleV1.Builder, org.xmtp.proto.message.contents.Contact.ContactBundleV1OrBuilder> v1Builder_;
      /**
       * <code>.xmtp.message_contents.ContactBundleV1 v1 = 1;</code>
       * @return Whether the v1 field is set.
       */
      @java.lang.Override
      public boolean hasV1() {
        return versionCase_ == 1;
      }
      /**
       * <code>.xmtp.message_contents.ContactBundleV1 v1 = 1;</code>
       * @return The v1.
       */
      @java.lang.Override
      public org.xmtp.proto.message.contents.Contact.ContactBundleV1 getV1() {
        if (v1Builder_ == null) {
          if (versionCase_ == 1) {
            return (org.xmtp.proto.message.contents.Contact.ContactBundleV1) version_;
          }
          return org.xmtp.proto.message.contents.Contact.ContactBundleV1.getDefaultInstance();
        } else {
          if (versionCase_ == 1) {
            return v1Builder_.getMessage();
          }
          return org.xmtp.proto.message.contents.Contact.ContactBundleV1.getDefaultInstance();
        }
      }
      /**
       * <code>.xmtp.message_contents.ContactBundleV1 v1 = 1;</code>
       */
      public Builder setV1(org.xmtp.proto.message.contents.Contact.ContactBundleV1 value) {
        if (v1Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          version_ = value;
          onChanged();
        } else {
          v1Builder_.setMessage(value);
        }
        versionCase_ = 1;
        return this;
      }
      /**
       * <code>.xmtp.message_contents.ContactBundleV1 v1 = 1;</code>
       */
      public Builder setV1(
          org.xmtp.proto.message.contents.Contact.ContactBundleV1.Builder builderForValue) {
        if (v1Builder_ == null) {
          version_ = builderForValue.build();
          onChanged();
        } else {
          v1Builder_.setMessage(builderForValue.build());
        }
        versionCase_ = 1;
        return this;
      }
      /**
       * <code>.xmtp.message_contents.ContactBundleV1 v1 = 1;</code>
       */
      public Builder mergeV1(org.xmtp.proto.message.contents.Contact.ContactBundleV1 value) {
        if (v1Builder_ == null) {
          if (versionCase_ == 1 &&
              version_ != org.xmtp.proto.message.contents.Contact.ContactBundleV1.getDefaultInstance()) {
            version_ = org.xmtp.proto.message.contents.Contact.ContactBundleV1.newBuilder((org.xmtp.proto.message.contents.Contact.ContactBundleV1) version_)
                .mergeFrom(value).buildPartial();
          } else {
            version_ = value;
          }
          onChanged();
        } else {
          if (versionCase_ == 1) {
            v1Builder_.mergeFrom(value);
          } else {
            v1Builder_.setMessage(value);
          }
        }
        versionCase_ = 1;
        return this;
      }
      /**
       * <code>.xmtp.message_contents.ContactBundleV1 v1 = 1;</code>
       */
      public Builder clearV1() {
        if (v1Builder_ == null) {
          if (versionCase_ == 1) {
            versionCase_ = 0;
            version_ = null;
            onChanged();
          }
        } else {
          if (versionCase_ == 1) {
            versionCase_ = 0;
            version_ = null;
          }
          v1Builder_.clear();
        }
        return this;
      }
      /**
       * <code>.xmtp.message_contents.ContactBundleV1 v1 = 1;</code>
       */
      public org.xmtp.proto.message.contents.Contact.ContactBundleV1.Builder getV1Builder() {
        return getV1FieldBuilder().getBuilder();
      }
      /**
       * <code>.xmtp.message_contents.ContactBundleV1 v1 = 1;</code>
       */
      @java.lang.Override
      public org.xmtp.proto.message.contents.Contact.ContactBundleV1OrBuilder getV1OrBuilder() {
        if ((versionCase_ == 1) && (v1Builder_ != null)) {
          return v1Builder_.getMessageOrBuilder();
        } else {
          if (versionCase_ == 1) {
            return (org.xmtp.proto.message.contents.Contact.ContactBundleV1) version_;
          }
          return org.xmtp.proto.message.contents.Contact.ContactBundleV1.getDefaultInstance();
        }
      }
      /**
       * <code>.xmtp.message_contents.ContactBundleV1 v1 = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.xmtp.proto.message.contents.Contact.ContactBundleV1, org.xmtp.proto.message.contents.Contact.ContactBundleV1.Builder, org.xmtp.proto.message.contents.Contact.ContactBundleV1OrBuilder> 
          getV1FieldBuilder() {
        if (v1Builder_ == null) {
          if (!(versionCase_ == 1)) {
            version_ = org.xmtp.proto.message.contents.Contact.ContactBundleV1.getDefaultInstance();
          }
          v1Builder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.xmtp.proto.message.contents.Contact.ContactBundleV1, org.xmtp.proto.message.contents.Contact.ContactBundleV1.Builder, org.xmtp.proto.message.contents.Contact.ContactBundleV1OrBuilder>(
                  (org.xmtp.proto.message.contents.Contact.ContactBundleV1) version_,
                  getParentForChildren(),
                  isClean());
          version_ = null;
        }
        versionCase_ = 1;
        onChanged();
        return v1Builder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.xmtp.proto.message.contents.Contact.ContactBundleV2, org.xmtp.proto.message.contents.Contact.ContactBundleV2.Builder, org.xmtp.proto.message.contents.Contact.ContactBundleV2OrBuilder> v2Builder_;
      /**
       * <code>.xmtp.message_contents.ContactBundleV2 v2 = 2;</code>
       * @return Whether the v2 field is set.
       */
      @java.lang.Override
      public boolean hasV2() {
        return versionCase_ == 2;
      }
      /**
       * <code>.xmtp.message_contents.ContactBundleV2 v2 = 2;</code>
       * @return The v2.
       */
      @java.lang.Override
      public org.xmtp.proto.message.contents.Contact.ContactBundleV2 getV2() {
        if (v2Builder_ == null) {
          if (versionCase_ == 2) {
            return (org.xmtp.proto.message.contents.Contact.ContactBundleV2) version_;
          }
          return org.xmtp.proto.message.contents.Contact.ContactBundleV2.getDefaultInstance();
        } else {
          if (versionCase_ == 2) {
            return v2Builder_.getMessage();
          }
          return org.xmtp.proto.message.contents.Contact.ContactBundleV2.getDefaultInstance();
        }
      }
      /**
       * <code>.xmtp.message_contents.ContactBundleV2 v2 = 2;</code>
       */
      public Builder setV2(org.xmtp.proto.message.contents.Contact.ContactBundleV2 value) {
        if (v2Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          version_ = value;
          onChanged();
        } else {
          v2Builder_.setMessage(value);
        }
        versionCase_ = 2;
        return this;
      }
      /**
       * <code>.xmtp.message_contents.ContactBundleV2 v2 = 2;</code>
       */
      public Builder setV2(
          org.xmtp.proto.message.contents.Contact.ContactBundleV2.Builder builderForValue) {
        if (v2Builder_ == null) {
          version_ = builderForValue.build();
          onChanged();
        } else {
          v2Builder_.setMessage(builderForValue.build());
        }
        versionCase_ = 2;
        return this;
      }
      /**
       * <code>.xmtp.message_contents.ContactBundleV2 v2 = 2;</code>
       */
      public Builder mergeV2(org.xmtp.proto.message.contents.Contact.ContactBundleV2 value) {
        if (v2Builder_ == null) {
          if (versionCase_ == 2 &&
              version_ != org.xmtp.proto.message.contents.Contact.ContactBundleV2.getDefaultInstance()) {
            version_ = org.xmtp.proto.message.contents.Contact.ContactBundleV2.newBuilder((org.xmtp.proto.message.contents.Contact.ContactBundleV2) version_)
                .mergeFrom(value).buildPartial();
          } else {
            version_ = value;
          }
          onChanged();
        } else {
          if (versionCase_ == 2) {
            v2Builder_.mergeFrom(value);
          } else {
            v2Builder_.setMessage(value);
          }
        }
        versionCase_ = 2;
        return this;
      }
      /**
       * <code>.xmtp.message_contents.ContactBundleV2 v2 = 2;</code>
       */
      public Builder clearV2() {
        if (v2Builder_ == null) {
          if (versionCase_ == 2) {
            versionCase_ = 0;
            version_ = null;
            onChanged();
          }
        } else {
          if (versionCase_ == 2) {
            versionCase_ = 0;
            version_ = null;
          }
          v2Builder_.clear();
        }
        return this;
      }
      /**
       * <code>.xmtp.message_contents.ContactBundleV2 v2 = 2;</code>
       */
      public org.xmtp.proto.message.contents.Contact.ContactBundleV2.Builder getV2Builder() {
        return getV2FieldBuilder().getBuilder();
      }
      /**
       * <code>.xmtp.message_contents.ContactBundleV2 v2 = 2;</code>
       */
      @java.lang.Override
      public org.xmtp.proto.message.contents.Contact.ContactBundleV2OrBuilder getV2OrBuilder() {
        if ((versionCase_ == 2) && (v2Builder_ != null)) {
          return v2Builder_.getMessageOrBuilder();
        } else {
          if (versionCase_ == 2) {
            return (org.xmtp.proto.message.contents.Contact.ContactBundleV2) version_;
          }
          return org.xmtp.proto.message.contents.Contact.ContactBundleV2.getDefaultInstance();
        }
      }
      /**
       * <code>.xmtp.message_contents.ContactBundleV2 v2 = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.xmtp.proto.message.contents.Contact.ContactBundleV2, org.xmtp.proto.message.contents.Contact.ContactBundleV2.Builder, org.xmtp.proto.message.contents.Contact.ContactBundleV2OrBuilder> 
          getV2FieldBuilder() {
        if (v2Builder_ == null) {
          if (!(versionCase_ == 2)) {
            version_ = org.xmtp.proto.message.contents.Contact.ContactBundleV2.getDefaultInstance();
          }
          v2Builder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.xmtp.proto.message.contents.Contact.ContactBundleV2, org.xmtp.proto.message.contents.Contact.ContactBundleV2.Builder, org.xmtp.proto.message.contents.Contact.ContactBundleV2OrBuilder>(
                  (org.xmtp.proto.message.contents.Contact.ContactBundleV2) version_,
                  getParentForChildren(),
                  isClean());
          version_ = null;
        }
        versionCase_ = 2;
        onChanged();
        return v2Builder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:xmtp.message_contents.ContactBundle)
    }

    // @@protoc_insertion_point(class_scope:xmtp.message_contents.ContactBundle)
    private static final org.xmtp.proto.message.contents.Contact.ContactBundle DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.xmtp.proto.message.contents.Contact.ContactBundle();
    }

    public static org.xmtp.proto.message.contents.Contact.ContactBundle getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ContactBundle>
        PARSER = new com.google.protobuf.AbstractParser<ContactBundle>() {
      @java.lang.Override
      public ContactBundle parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ContactBundle> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ContactBundle> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.xmtp.proto.message.contents.Contact.ContactBundle getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_xmtp_message_contents_ContactBundleV1_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_xmtp_message_contents_ContactBundleV1_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_xmtp_message_contents_ContactBundleV2_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_xmtp_message_contents_ContactBundleV2_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_xmtp_message_contents_ContactBundle_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_xmtp_message_contents_ContactBundle_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\036message_contents/contact.proto\022\025xmtp.m" +
      "essage_contents\032!message_contents/public" +
      "_key.proto\"M\n\017ContactBundleV1\022:\n\nkey_bun" +
      "dle\030\001 \001(\0132&.xmtp.message_contents.Public" +
      "KeyBundle\"S\n\017ContactBundleV2\022@\n\nkey_bund" +
      "le\030\001 \001(\0132,.xmtp.message_contents.SignedP" +
      "ublicKeyBundle\"\206\001\n\rContactBundle\0224\n\002v1\030\001" +
      " \001(\0132&.xmtp.message_contents.ContactBund" +
      "leV1H\000\0224\n\002v2\030\002 \001(\0132&.xmtp.message_conten" +
      "ts.ContactBundleV2H\000B\t\n\007versionBO\n\037org.x" +
      "mtp.proto.message.contentsZ,github.com/x" +
      "mtp/proto/v3/go/message_contentsb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.xmtp.proto.message.contents.PublicKeyOuterClass.getDescriptor(),
        });
    internal_static_xmtp_message_contents_ContactBundleV1_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_xmtp_message_contents_ContactBundleV1_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_xmtp_message_contents_ContactBundleV1_descriptor,
        new java.lang.String[] { "KeyBundle", });
    internal_static_xmtp_message_contents_ContactBundleV2_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_xmtp_message_contents_ContactBundleV2_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_xmtp_message_contents_ContactBundleV2_descriptor,
        new java.lang.String[] { "KeyBundle", });
    internal_static_xmtp_message_contents_ContactBundle_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_xmtp_message_contents_ContactBundle_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_xmtp_message_contents_ContactBundle_descriptor,
        new java.lang.String[] { "V1", "V2", "Version", });
    org.xmtp.proto.message.contents.PublicKeyOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
