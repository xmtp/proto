// Signature is a generic structure for public key signatures.
syntax = "proto3";

package xmtp.message_contents;

option go_package = "github.com/xmtp/proto/v3/go/message_contents";
option java_package = "org.xmtp.proto.message.contents";

// Signature represents a generalized public key signature,
// defined as a union to support cryptographic algorithm agility.
message Signature {
    // ECDSA signature bytes and the recovery bit
    message ECDSACompact {
        bytes bytes = 1; // compact representation [ R || S ], 64 bytes
        uint32 recovery = 2; // recovery bit
    }

    // DEPRECATION IN PROGRESS
    // ECDSA signature bytes and the recovery bit
    // produced by xmtp-js::PublicKey.signWithWallet function, i.e.
    // EIP-191 signature of a "Create Identity" message with the key embedded.
    // Used to sign identity keys.
    message WalletECDSACompact {
        bytes bytes = 1; // compact representation [ R || S ], 64 bytes
        uint32 recovery = 2; // recovery bit
    }
    oneof union {
        ECDSACompact ecdsa_compact = 1;
        WalletECDSACompact wallet_ecdsa_compact = 2;
    }
}

// A signature used to link a key to an account with a
// static text format, e.g.
// 'XMTP : Grant Send Permissions ...'
// The key bytes and role of the key must be validated against the
// signature text
message AccountLinkedStaticSignature {
    // V1
    message V1 {
        bytes text = 1;
        Signature signature = 2;
    }
    oneof version {
        V1 v1 = 1;
    }
}

// A signature used to revoke a key from an account
// with a static text format, e.g.
// 'XMTP : Revoke Send Permissions ...'
// The key bytes and revocation action must be validated
// against the signature text
message AccountRevokedStaticSignature {
    // V1
    message V1 {
        bytes text = 1;
        Signature signature = 2;
    }
    oneof version {
        V1 v1 = 1;
    }
}

// A signature used to link a key to an account, with
// sign-in with Ethereum format (EIP-4361).
// The key bytes and role of the key must be validated
// against the signature text
message AccountLinkedSIWESignature {
    // V1
    message V1 {
        bytes text = 1;
        Signature signature = 2;
    }
    oneof version {
        V1 v1 = 1;
    }
}
