// V3 invite message structure

syntax = "proto3";

package xmtp.mls.database;

option go_package = "github.com/xmtp/proto/v3/go/mls/database";
option java_package = "org.xmtp.proto.mls.database";

// The data required to publish a message
message SendMessageData {
  // V1 of SendMessagePublishData
  message V1 {
    bytes payload_bytes = 1;
  }

  oneof version {
    V1 v1 = 1;
  }
}

// Wrapper around a list af repeated EVM Account Addresses
message AccountAddresses {
  repeated string account_addresses = 1;
}

// Wrapper around a list of repeated Installation IDs
message InstallationIds {
  repeated bytes installation_ids = 1;
}

// One of an EVM account address or Installation ID
message AddressesOrInstallationIds {
  oneof addresses_or_installation_ids {
    AccountAddresses account_addresses = 1;
    InstallationIds installation_ids = 2;
  }
}

// The data required to add members to a group
message AddMembersData {
  // V1 of AddMembersPublishData
  message V1 {
    AddressesOrInstallationIds addresses_or_installation_ids = 1;
  }

  oneof version {
    V1 v1 = 1;
  }
}

// The data required to remove members from a group
message RemoveMembersData {
  // V1 of RemoveMembersPublishData
  message V1 {
    AddressesOrInstallationIds addresses_or_installation_ids = 1;
  }

  oneof version {
    V1 v1 = 1;
  }
}

// The data required to make a commit that updates group membership
// Handles both Add and Remove actions
message UpdateGroupMembershipData {
  // V1 of UpdateGroupMembershipPublishData
  message V1 {
    // Contains delta of membership updates that need to be applied
    map<string, uint64> membership_updates = 1;
    // Contains the list of members that will be removed
    repeated string removed_members = 2;
  }

  oneof version {
    V1 v1 = 1;
  }
}

// The data required to update group metadata
message UpdateMetadataData {
  // V1 of UpdateMetadataPublishData
  message V1 {
    string field_name = 1;
    string field_value = 2;
  }

  oneof version {
    V1 v1 = 1;
  }
}

// Type of update to admin lists
enum AdminListUpdateType {
  ADMIN_LIST_UPDATE_TYPE_UNSPECIFIED = 0;
  ADMIN_LIST_UPDATE_TYPE_ADD_ADMIN = 1;
  ADMIN_LIST_UPDATE_TYPE_REMOVE_ADMIN = 2;
  ADMIN_LIST_UPDATE_TYPE_ADD_SUPER_ADMIN = 3;
  ADMIN_LIST_UPDATE_TYPE_REMOVE_SUPER_ADMIN = 4;
}

// The data required to update group admin/super admin lists
message UpdateAdminListsData {
  // V1 of UpdateAdminListsPublishData
  message V1 {
    AdminListUpdateType admin_list_update_type = 1;
    string inbox_id = 2;
  }

  oneof version {
    V1 v1 = 1;
  }
}

// Generic data-type for all post-commit actions
message PostCommitAction {
  // An installation
  message Installation {
    bytes installation_key = 1;
    bytes hpke_public_key = 2;
  }
  // SendWelcome message
  message SendWelcomes {
    repeated Installation installations = 1;
    bytes welcome_message = 2;
  }

  oneof kind {
    SendWelcomes send_welcomes = 1;
  }
}
