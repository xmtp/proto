// Signature is a generic structure for public key signatures.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.4
// source: message_contents/signature.proto

package message_contents

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Add an enum of possible signature contexts
type Signature_Context int32

const (
	Signature_CONTEXT_UNSPECIFIED Signature_Context = 0
	// Expects xmtp domain and a specific statement in message
	Signature_CONTEXT_SIWE_SENDER_KEY_ASSOCIATION Signature_Context = 1
)

// Enum value maps for Signature_Context.
var (
	Signature_Context_name = map[int32]string{
		0: "CONTEXT_UNSPECIFIED",
		1: "CONTEXT_SIWE_SENDER_KEY_ASSOCIATION",
	}
	Signature_Context_value = map[string]int32{
		"CONTEXT_UNSPECIFIED":                 0,
		"CONTEXT_SIWE_SENDER_KEY_ASSOCIATION": 1,
	}
)

func (x Signature_Context) Enum() *Signature_Context {
	p := new(Signature_Context)
	*p = x
	return p
}

func (x Signature_Context) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Signature_Context) Descriptor() protoreflect.EnumDescriptor {
	return file_message_contents_signature_proto_enumTypes[0].Descriptor()
}

func (Signature_Context) Type() protoreflect.EnumType {
	return &file_message_contents_signature_proto_enumTypes[0]
}

func (x Signature_Context) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Signature_Context.Descriptor instead.
func (Signature_Context) EnumDescriptor() ([]byte, []int) {
	return file_message_contents_signature_proto_rawDescGZIP(), []int{0, 0}
}

// Describes how to interpret signature bytes and verify the
// signature from message bytes.
type Signature_Scheme int32

const (
	Signature_SCHEME_UNSPECIFIED Signature_Scheme = 0
	// The scheme used for identity_key<->prekey association
	Signature_SCHEME_ECDSA_SECP256K1_SHA256_RSV Signature_Scheme = 1
	// The scheme used for identity_key association, encrypted store keys
	Signature_SCHEME_ETHEREUM_PERSONAL_SIGNATURE Signature_Scheme = 2
)

// Enum value maps for Signature_Scheme.
var (
	Signature_Scheme_name = map[int32]string{
		0: "SCHEME_UNSPECIFIED",
		1: "SCHEME_ECDSA_SECP256K1_SHA256_RSV",
		2: "SCHEME_ETHEREUM_PERSONAL_SIGNATURE",
	}
	Signature_Scheme_value = map[string]int32{
		"SCHEME_UNSPECIFIED":                 0,
		"SCHEME_ECDSA_SECP256K1_SHA256_RSV":  1,
		"SCHEME_ETHEREUM_PERSONAL_SIGNATURE": 2,
	}
)

func (x Signature_Scheme) Enum() *Signature_Scheme {
	p := new(Signature_Scheme)
	*p = x
	return p
}

func (x Signature_Scheme) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Signature_Scheme) Descriptor() protoreflect.EnumDescriptor {
	return file_message_contents_signature_proto_enumTypes[1].Descriptor()
}

func (Signature_Scheme) Type() protoreflect.EnumType {
	return &file_message_contents_signature_proto_enumTypes[1]
}

func (x Signature_Scheme) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Signature_Scheme.Descriptor instead.
func (Signature_Scheme) EnumDescriptor() ([]byte, []int) {
	return file_message_contents_signature_proto_rawDescGZIP(), []int{0, 1}
}

// Signature represents a generalized public key signature,
// defined as a union to support cryptographic algorithm agility.
type Signature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Union:
	//	*Signature_EcdsaCompact
	//	*Signature_WalletEcdsaCompact
	//	*Signature_Siwe
	Union isSignature_Union `protobuf_oneof:"union"`
}

func (x *Signature) Reset() {
	*x = Signature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_contents_signature_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Signature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Signature) ProtoMessage() {}

func (x *Signature) ProtoReflect() protoreflect.Message {
	mi := &file_message_contents_signature_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Signature.ProtoReflect.Descriptor instead.
func (*Signature) Descriptor() ([]byte, []int) {
	return file_message_contents_signature_proto_rawDescGZIP(), []int{0}
}

func (m *Signature) GetUnion() isSignature_Union {
	if m != nil {
		return m.Union
	}
	return nil
}

func (x *Signature) GetEcdsaCompact() *Signature_ECDSACompact {
	if x, ok := x.GetUnion().(*Signature_EcdsaCompact); ok {
		return x.EcdsaCompact
	}
	return nil
}

func (x *Signature) GetWalletEcdsaCompact() *Signature_WalletECDSACompact {
	if x, ok := x.GetUnion().(*Signature_WalletEcdsaCompact); ok {
		return x.WalletEcdsaCompact
	}
	return nil
}

func (x *Signature) GetSiwe() *Signature_SIWE {
	if x, ok := x.GetUnion().(*Signature_Siwe); ok {
		return x.Siwe
	}
	return nil
}

type isSignature_Union interface {
	isSignature_Union()
}

type Signature_EcdsaCompact struct {
	EcdsaCompact *Signature_ECDSACompact `protobuf:"bytes,1,opt,name=ecdsa_compact,json=ecdsaCompact,proto3,oneof"`
}

type Signature_WalletEcdsaCompact struct {
	WalletEcdsaCompact *Signature_WalletECDSACompact `protobuf:"bytes,2,opt,name=wallet_ecdsa_compact,json=walletEcdsaCompact,proto3,oneof"`
}

type Signature_Siwe struct {
	Siwe *Signature_SIWE `protobuf:"bytes,3,opt,name=siwe,proto3,oneof"`
}

func (*Signature_EcdsaCompact) isSignature_Union() {}

func (*Signature_WalletEcdsaCompact) isSignature_Union() {}

func (*Signature_Siwe) isSignature_Union() {}

// ECDSA signature bytes and the recovery bit
type Signature_ECDSACompact struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bytes    []byte `protobuf:"bytes,1,opt,name=bytes,proto3" json:"bytes,omitempty"`        // compact representation [ R || S ], 64 bytes
	Recovery uint32 `protobuf:"varint,2,opt,name=recovery,proto3" json:"recovery,omitempty"` // recovery bit
}

func (x *Signature_ECDSACompact) Reset() {
	*x = Signature_ECDSACompact{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_contents_signature_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Signature_ECDSACompact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Signature_ECDSACompact) ProtoMessage() {}

func (x *Signature_ECDSACompact) ProtoReflect() protoreflect.Message {
	mi := &file_message_contents_signature_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Signature_ECDSACompact.ProtoReflect.Descriptor instead.
func (*Signature_ECDSACompact) Descriptor() ([]byte, []int) {
	return file_message_contents_signature_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Signature_ECDSACompact) GetBytes() []byte {
	if x != nil {
		return x.Bytes
	}
	return nil
}

func (x *Signature_ECDSACompact) GetRecovery() uint32 {
	if x != nil {
		return x.Recovery
	}
	return 0
}

// ECDSA signature bytes and the recovery bit
// produced by xmtp-js::PublicKey.signWithWallet function, i.e.
// EIP-191 signature of a "Create Identity" message with the key embedded.
// Used to sign identity keys.
type Signature_WalletECDSACompact struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bytes    []byte `protobuf:"bytes,1,opt,name=bytes,proto3" json:"bytes,omitempty"`        // compact representation [ R || S ], 64 bytes
	Recovery uint32 `protobuf:"varint,2,opt,name=recovery,proto3" json:"recovery,omitempty"` // recovery bit
}

func (x *Signature_WalletECDSACompact) Reset() {
	*x = Signature_WalletECDSACompact{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_contents_signature_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Signature_WalletECDSACompact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Signature_WalletECDSACompact) ProtoMessage() {}

func (x *Signature_WalletECDSACompact) ProtoReflect() protoreflect.Message {
	mi := &file_message_contents_signature_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Signature_WalletECDSACompact.ProtoReflect.Descriptor instead.
func (*Signature_WalletECDSACompact) Descriptor() ([]byte, []int) {
	return file_message_contents_signature_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Signature_WalletECDSACompact) GetBytes() []byte {
	if x != nil {
		return x.Bytes
	}
	return nil
}

func (x *Signature_WalletECDSACompact) GetRecovery() uint32 {
	if x != nil {
		return x.Recovery
	}
	return 0
}

// Self-describing signature format meant for maximizing interoperability
type Signature_SIWE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Serialized signature bytes
	SignatureBytes []byte `protobuf:"bytes,1,opt,name=signature_bytes,json=signatureBytes,proto3" json:"signature_bytes,omitempty"`
	// Message bytes before processing that appends the context
	MessageBytes []byte `protobuf:"bytes,2,opt,name=message_bytes,json=messageBytes,proto3" json:"message_bytes,omitempty"`
	// Signature derivation scheme
	Scheme Signature_Scheme `protobuf:"varint,3,opt,name=scheme,proto3,enum=xmtp.message_contents.Signature_Scheme" json:"scheme,omitempty"`
	// Here, the context maps to what we expect to see in the {domain}
	// and {statement} fields of the SIWE message_bytes
	Context Signature_Context `protobuf:"varint,4,opt,name=context,proto3,enum=xmtp.message_contents.Signature_Context" json:"context,omitempty"`
}

func (x *Signature_SIWE) Reset() {
	*x = Signature_SIWE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_contents_signature_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Signature_SIWE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Signature_SIWE) ProtoMessage() {}

func (x *Signature_SIWE) ProtoReflect() protoreflect.Message {
	mi := &file_message_contents_signature_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Signature_SIWE.ProtoReflect.Descriptor instead.
func (*Signature_SIWE) Descriptor() ([]byte, []int) {
	return file_message_contents_signature_proto_rawDescGZIP(), []int{0, 2}
}

func (x *Signature_SIWE) GetSignatureBytes() []byte {
	if x != nil {
		return x.SignatureBytes
	}
	return nil
}

func (x *Signature_SIWE) GetMessageBytes() []byte {
	if x != nil {
		return x.MessageBytes
	}
	return nil
}

func (x *Signature_SIWE) GetScheme() Signature_Scheme {
	if x != nil {
		return x.Scheme
	}
	return Signature_SCHEME_UNSPECIFIED
}

func (x *Signature_SIWE) GetContext() Signature_Context {
	if x != nil {
		return x.Context
	}
	return Signature_CONTEXT_UNSPECIFIED
}

var File_message_contents_signature_proto protoreflect.FileDescriptor

var file_message_contents_signature_proto_rawDesc = []byte{
	0x0a, 0x20, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x73, 0x2f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x15, 0x78, 0x6d, 0x74, 0x70, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xb4, 0x06, 0x0a, 0x09, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x54, 0x0a, 0x0d, 0x65, 0x63, 0x64, 0x73, 0x61,
	0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x78, 0x6d, 0x74, 0x70, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x2e, 0x45, 0x43, 0x44, 0x53, 0x41, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x48, 0x00, 0x52,
	0x0c, 0x65, 0x63, 0x64, 0x73, 0x61, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x12, 0x67, 0x0a,
	0x14, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x65, 0x63, 0x64, 0x73, 0x61, 0x5f, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x78, 0x6d,
	0x74, 0x70, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x45, 0x43, 0x44, 0x53, 0x41, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74,
	0x48, 0x00, 0x52, 0x12, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x45, 0x63, 0x64, 0x73, 0x61, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x12, 0x3b, 0x0a, 0x04, 0x73, 0x69, 0x77, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x78, 0x6d, 0x74, 0x70, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x49, 0x57, 0x45, 0x48, 0x00, 0x52, 0x04, 0x73,
	0x69, 0x77, 0x65, 0x1a, 0x40, 0x0a, 0x0c, 0x45, 0x43, 0x44, 0x53, 0x41, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x65, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x79, 0x1a, 0x46, 0x0a, 0x12, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x45,
	0x43, 0x44, 0x53, 0x41, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x62,
	0x79, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x1a, 0xd9, 0x01,
	0x0a, 0x04, 0x53, 0x49, 0x57, 0x45, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12,
	0x23, 0x0a, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x12, 0x3f, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x78, 0x6d, 0x74, 0x70, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x52, 0x06, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x42, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x78, 0x6d, 0x74, 0x70, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0x4b, 0x0a, 0x07, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x58, 0x54, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x27, 0x0a,
	0x23, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x58, 0x54, 0x5f, 0x53, 0x49, 0x57, 0x45, 0x5f, 0x53, 0x45,
	0x4e, 0x44, 0x45, 0x52, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x41, 0x53, 0x53, 0x4f, 0x43, 0x49, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x22, 0x6f, 0x0a, 0x06, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x12, 0x53, 0x43, 0x48, 0x45, 0x4d, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x25, 0x0a, 0x21, 0x53, 0x43, 0x48, 0x45,
	0x4d, 0x45, 0x5f, 0x45, 0x43, 0x44, 0x53, 0x41, 0x5f, 0x53, 0x45, 0x43, 0x50, 0x32, 0x35, 0x36,
	0x4b, 0x31, 0x5f, 0x53, 0x48, 0x41, 0x32, 0x35, 0x36, 0x5f, 0x52, 0x53, 0x56, 0x10, 0x01, 0x12,
	0x26, 0x0a, 0x22, 0x53, 0x43, 0x48, 0x45, 0x4d, 0x45, 0x5f, 0x45, 0x54, 0x48, 0x45, 0x52, 0x45,
	0x55, 0x4d, 0x5f, 0x50, 0x45, 0x52, 0x53, 0x4f, 0x4e, 0x41, 0x4c, 0x5f, 0x53, 0x49, 0x47, 0x4e,
	0x41, 0x54, 0x55, 0x52, 0x45, 0x10, 0x02, 0x42, 0x07, 0x0a, 0x05, 0x75, 0x6e, 0x69, 0x6f, 0x6e,
	0x42, 0x4f, 0x0a, 0x1f, 0x6f, 0x72, 0x67, 0x2e, 0x78, 0x6d, 0x74, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x73, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x78, 0x6d, 0x74, 0x70, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x33, 0x2f, 0x67, 0x6f,
	0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_message_contents_signature_proto_rawDescOnce sync.Once
	file_message_contents_signature_proto_rawDescData = file_message_contents_signature_proto_rawDesc
)

func file_message_contents_signature_proto_rawDescGZIP() []byte {
	file_message_contents_signature_proto_rawDescOnce.Do(func() {
		file_message_contents_signature_proto_rawDescData = protoimpl.X.CompressGZIP(file_message_contents_signature_proto_rawDescData)
	})
	return file_message_contents_signature_proto_rawDescData
}

var file_message_contents_signature_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_message_contents_signature_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_message_contents_signature_proto_goTypes = []interface{}{
	(Signature_Context)(0),               // 0: xmtp.message_contents.Signature.Context
	(Signature_Scheme)(0),                // 1: xmtp.message_contents.Signature.Scheme
	(*Signature)(nil),                    // 2: xmtp.message_contents.Signature
	(*Signature_ECDSACompact)(nil),       // 3: xmtp.message_contents.Signature.ECDSACompact
	(*Signature_WalletECDSACompact)(nil), // 4: xmtp.message_contents.Signature.WalletECDSACompact
	(*Signature_SIWE)(nil),               // 5: xmtp.message_contents.Signature.SIWE
}
var file_message_contents_signature_proto_depIdxs = []int32{
	3, // 0: xmtp.message_contents.Signature.ecdsa_compact:type_name -> xmtp.message_contents.Signature.ECDSACompact
	4, // 1: xmtp.message_contents.Signature.wallet_ecdsa_compact:type_name -> xmtp.message_contents.Signature.WalletECDSACompact
	5, // 2: xmtp.message_contents.Signature.siwe:type_name -> xmtp.message_contents.Signature.SIWE
	1, // 3: xmtp.message_contents.Signature.SIWE.scheme:type_name -> xmtp.message_contents.Signature.Scheme
	0, // 4: xmtp.message_contents.Signature.SIWE.context:type_name -> xmtp.message_contents.Signature.Context
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_message_contents_signature_proto_init() }
func file_message_contents_signature_proto_init() {
	if File_message_contents_signature_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_message_contents_signature_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Signature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_contents_signature_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Signature_ECDSACompact); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_contents_signature_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Signature_WalletECDSACompact); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_contents_signature_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Signature_SIWE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_message_contents_signature_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Signature_EcdsaCompact)(nil),
		(*Signature_WalletEcdsaCompact)(nil),
		(*Signature_Siwe)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_message_contents_signature_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_message_contents_signature_proto_goTypes,
		DependencyIndexes: file_message_contents_signature_proto_depIdxs,
		EnumInfos:         file_message_contents_signature_proto_enumTypes,
		MessageInfos:      file_message_contents_signature_proto_msgTypes,
	}.Build()
	File_message_contents_signature_proto = out.File
	file_message_contents_signature_proto_rawDesc = nil
	file_message_contents_signature_proto_goTypes = nil
	file_message_contents_signature_proto_depIdxs = nil
}
