// Structure for representing public keys of different types,
// including signatures used to authenticate the keys.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.12
// source: message_contents/public_key.proto

package message_contents

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// UnsignedPublicKey represents a generalized public key,
// defined as a union to support cryptographic algorithm agility.
type UnsignedPublicKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedNs uint64 `protobuf:"varint,1,opt,name=created_ns,json=createdNs,proto3" json:"created_ns,omitempty"`
	// Types that are assignable to Union:
	//
	//	*UnsignedPublicKey_Secp256K1Uncompressed_
	Union isUnsignedPublicKey_Union `protobuf_oneof:"union"`
}

func (x *UnsignedPublicKey) Reset() {
	*x = UnsignedPublicKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_contents_public_key_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsignedPublicKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsignedPublicKey) ProtoMessage() {}

func (x *UnsignedPublicKey) ProtoReflect() protoreflect.Message {
	mi := &file_message_contents_public_key_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsignedPublicKey.ProtoReflect.Descriptor instead.
func (*UnsignedPublicKey) Descriptor() ([]byte, []int) {
	return file_message_contents_public_key_proto_rawDescGZIP(), []int{0}
}

func (x *UnsignedPublicKey) GetCreatedNs() uint64 {
	if x != nil {
		return x.CreatedNs
	}
	return 0
}

func (m *UnsignedPublicKey) GetUnion() isUnsignedPublicKey_Union {
	if m != nil {
		return m.Union
	}
	return nil
}

func (x *UnsignedPublicKey) GetSecp256K1Uncompressed() *UnsignedPublicKey_Secp256K1Uncompressed {
	if x, ok := x.GetUnion().(*UnsignedPublicKey_Secp256K1Uncompressed_); ok {
		return x.Secp256K1Uncompressed
	}
	return nil
}

type isUnsignedPublicKey_Union interface {
	isUnsignedPublicKey_Union()
}

type UnsignedPublicKey_Secp256K1Uncompressed_ struct {
	Secp256K1Uncompressed *UnsignedPublicKey_Secp256K1Uncompressed `protobuf:"bytes,3,opt,name=secp256k1_uncompressed,json=secp256k1Uncompressed,proto3,oneof"`
}

func (*UnsignedPublicKey_Secp256K1Uncompressed_) isUnsignedPublicKey_Union() {}

// A public key that is provably linked to a user account, for example
// signed by a wallet
type AccountLinkedPublicKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Version:
	//
	//	*AccountLinkedPublicKey_V1_
	Version isAccountLinkedPublicKey_Version `protobuf_oneof:"version"`
}

func (x *AccountLinkedPublicKey) Reset() {
	*x = AccountLinkedPublicKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_contents_public_key_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountLinkedPublicKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountLinkedPublicKey) ProtoMessage() {}

func (x *AccountLinkedPublicKey) ProtoReflect() protoreflect.Message {
	mi := &file_message_contents_public_key_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountLinkedPublicKey.ProtoReflect.Descriptor instead.
func (*AccountLinkedPublicKey) Descriptor() ([]byte, []int) {
	return file_message_contents_public_key_proto_rawDescGZIP(), []int{1}
}

func (m *AccountLinkedPublicKey) GetVersion() isAccountLinkedPublicKey_Version {
	if m != nil {
		return m.Version
	}
	return nil
}

func (x *AccountLinkedPublicKey) GetV1() *AccountLinkedPublicKey_V1 {
	if x, ok := x.GetVersion().(*AccountLinkedPublicKey_V1_); ok {
		return x.V1
	}
	return nil
}

type isAccountLinkedPublicKey_Version interface {
	isAccountLinkedPublicKey_Version()
}

type AccountLinkedPublicKey_V1_ struct {
	V1 *AccountLinkedPublicKey_V1 `protobuf:"bytes,1,opt,name=v1,proto3,oneof"`
}

func (*AccountLinkedPublicKey_V1_) isAccountLinkedPublicKey_Version() {}

// A public key that has been provably unlinked from a user account, for example
// revoked by a wallet signature
type AccountRevokedPublicKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Version:
	//
	//	*AccountRevokedPublicKey_V1_
	Version isAccountRevokedPublicKey_Version `protobuf_oneof:"version"`
}

func (x *AccountRevokedPublicKey) Reset() {
	*x = AccountRevokedPublicKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_contents_public_key_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountRevokedPublicKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountRevokedPublicKey) ProtoMessage() {}

func (x *AccountRevokedPublicKey) ProtoReflect() protoreflect.Message {
	mi := &file_message_contents_public_key_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountRevokedPublicKey.ProtoReflect.Descriptor instead.
func (*AccountRevokedPublicKey) Descriptor() ([]byte, []int) {
	return file_message_contents_public_key_proto_rawDescGZIP(), []int{2}
}

func (m *AccountRevokedPublicKey) GetVersion() isAccountRevokedPublicKey_Version {
	if m != nil {
		return m.Version
	}
	return nil
}

func (x *AccountRevokedPublicKey) GetV1() *AccountRevokedPublicKey_V1 {
	if x, ok := x.GetVersion().(*AccountRevokedPublicKey_V1_); ok {
		return x.V1
	}
	return nil
}

type isAccountRevokedPublicKey_Version interface {
	isAccountRevokedPublicKey_Version()
}

type AccountRevokedPublicKey_V1_ struct {
	V1 *AccountRevokedPublicKey_V1 `protobuf:"bytes,1,opt,name=v1,proto3,oneof"`
}

func (*AccountRevokedPublicKey_V1_) isAccountRevokedPublicKey_Version() {}

// A key that has been signed by an AccountLinkedPrivateKey, for example
// a pre-key
type SignedPublicKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyBytes  []byte     `protobuf:"bytes,1,opt,name=key_bytes,json=keyBytes,proto3" json:"key_bytes,omitempty"` // embeds an UnsignedPublicKey
	Signature *Signature `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`               // signs key_bytes
}

func (x *SignedPublicKey) Reset() {
	*x = SignedPublicKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_contents_public_key_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignedPublicKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignedPublicKey) ProtoMessage() {}

func (x *SignedPublicKey) ProtoReflect() protoreflect.Message {
	mi := &file_message_contents_public_key_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignedPublicKey.ProtoReflect.Descriptor instead.
func (*SignedPublicKey) Descriptor() ([]byte, []int) {
	return file_message_contents_public_key_proto_rawDescGZIP(), []int{3}
}

func (x *SignedPublicKey) GetKeyBytes() []byte {
	if x != nil {
		return x.KeyBytes
	}
	return nil
}

func (x *SignedPublicKey) GetSignature() *Signature {
	if x != nil {
		return x.Signature
	}
	return nil
}

// A bundle of keys representing one side of an X3DH exchange. This could be
// a send key bundle or an inbox key bundle.
type SignedPublicKeyBundleV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountLinkedKey *AccountLinkedPublicKey `protobuf:"bytes,1,opt,name=account_linked_key,json=accountLinkedKey,proto3" json:"account_linked_key,omitempty"`
	PreKey           *SignedPublicKey        `protobuf:"bytes,2,opt,name=pre_key,json=preKey,proto3" json:"pre_key,omitempty"`
}

func (x *SignedPublicKeyBundleV2) Reset() {
	*x = SignedPublicKeyBundleV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_contents_public_key_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignedPublicKeyBundleV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignedPublicKeyBundleV2) ProtoMessage() {}

func (x *SignedPublicKeyBundleV2) ProtoReflect() protoreflect.Message {
	mi := &file_message_contents_public_key_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignedPublicKeyBundleV2.ProtoReflect.Descriptor instead.
func (*SignedPublicKeyBundleV2) Descriptor() ([]byte, []int) {
	return file_message_contents_public_key_proto_rawDescGZIP(), []int{4}
}

func (x *SignedPublicKeyBundleV2) GetAccountLinkedKey() *AccountLinkedPublicKey {
	if x != nil {
		return x.AccountLinkedKey
	}
	return nil
}

func (x *SignedPublicKeyBundleV2) GetPreKey() *SignedPublicKey {
	if x != nil {
		return x.PreKey
	}
	return nil
}

// PublicKeyBundle packages the cryptographic keys associated with a wallet.
type SignedPublicKeyBundle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Identity key MUST be signed by the wallet.
	IdentityKey *SignedPublicKey `protobuf:"bytes,1,opt,name=identity_key,json=identityKey,proto3" json:"identity_key,omitempty"`
	// Pre-key MUST be signed by the identity key.
	PreKey *SignedPublicKey `protobuf:"bytes,2,opt,name=pre_key,json=preKey,proto3" json:"pre_key,omitempty"`
}

func (x *SignedPublicKeyBundle) Reset() {
	*x = SignedPublicKeyBundle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_contents_public_key_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignedPublicKeyBundle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignedPublicKeyBundle) ProtoMessage() {}

func (x *SignedPublicKeyBundle) ProtoReflect() protoreflect.Message {
	mi := &file_message_contents_public_key_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignedPublicKeyBundle.ProtoReflect.Descriptor instead.
func (*SignedPublicKeyBundle) Descriptor() ([]byte, []int) {
	return file_message_contents_public_key_proto_rawDescGZIP(), []int{5}
}

func (x *SignedPublicKeyBundle) GetIdentityKey() *SignedPublicKey {
	if x != nil {
		return x.IdentityKey
	}
	return nil
}

func (x *SignedPublicKeyBundle) GetPreKey() *SignedPublicKey {
	if x != nil {
		return x.PreKey
	}
	return nil
}

// PublicKey represents a generalized public key,
// defined as a union to support cryptographic algorithm agility.
type PublicKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp uint64     `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Signature *Signature `protobuf:"bytes,2,opt,name=signature,proto3,oneof" json:"signature,omitempty"`
	// Types that are assignable to Union:
	//
	//	*PublicKey_Secp256K1Uncompressed_
	Union isPublicKey_Union `protobuf_oneof:"union"`
}

func (x *PublicKey) Reset() {
	*x = PublicKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_contents_public_key_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicKey) ProtoMessage() {}

func (x *PublicKey) ProtoReflect() protoreflect.Message {
	mi := &file_message_contents_public_key_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicKey.ProtoReflect.Descriptor instead.
func (*PublicKey) Descriptor() ([]byte, []int) {
	return file_message_contents_public_key_proto_rawDescGZIP(), []int{6}
}

func (x *PublicKey) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *PublicKey) GetSignature() *Signature {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (m *PublicKey) GetUnion() isPublicKey_Union {
	if m != nil {
		return m.Union
	}
	return nil
}

func (x *PublicKey) GetSecp256K1Uncompressed() *PublicKey_Secp256K1Uncompressed {
	if x, ok := x.GetUnion().(*PublicKey_Secp256K1Uncompressed_); ok {
		return x.Secp256K1Uncompressed
	}
	return nil
}

type isPublicKey_Union interface {
	isPublicKey_Union()
}

type PublicKey_Secp256K1Uncompressed_ struct {
	Secp256K1Uncompressed *PublicKey_Secp256K1Uncompressed `protobuf:"bytes,3,opt,name=secp256k1_uncompressed,json=secp256k1Uncompressed,proto3,oneof"`
}

func (*PublicKey_Secp256K1Uncompressed_) isPublicKey_Union() {}

// PublicKeyBundle packages the cryptographic keys associated with a wallet,
// both senders and recipients are identified by their key bundles.
type PublicKeyBundle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Identity key MUST be signed by the wallet.
	IdentityKey *PublicKey `protobuf:"bytes,1,opt,name=identity_key,json=identityKey,proto3" json:"identity_key,omitempty"`
	// Pre-key MUST be signed by the identity key.
	PreKey *PublicKey `protobuf:"bytes,2,opt,name=pre_key,json=preKey,proto3" json:"pre_key,omitempty"`
}

func (x *PublicKeyBundle) Reset() {
	*x = PublicKeyBundle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_contents_public_key_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicKeyBundle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicKeyBundle) ProtoMessage() {}

func (x *PublicKeyBundle) ProtoReflect() protoreflect.Message {
	mi := &file_message_contents_public_key_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicKeyBundle.ProtoReflect.Descriptor instead.
func (*PublicKeyBundle) Descriptor() ([]byte, []int) {
	return file_message_contents_public_key_proto_rawDescGZIP(), []int{7}
}

func (x *PublicKeyBundle) GetIdentityKey() *PublicKey {
	if x != nil {
		return x.IdentityKey
	}
	return nil
}

func (x *PublicKeyBundle) GetPreKey() *PublicKey {
	if x != nil {
		return x.PreKey
	}
	return nil
}

// EC: SECP256k1
type UnsignedPublicKey_Secp256K1Uncompressed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// uncompressed point with prefix (0x04) [ P || X || Y ], 65 bytes
	Bytes []byte `protobuf:"bytes,1,opt,name=bytes,proto3" json:"bytes,omitempty"`
}

func (x *UnsignedPublicKey_Secp256K1Uncompressed) Reset() {
	*x = UnsignedPublicKey_Secp256K1Uncompressed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_contents_public_key_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsignedPublicKey_Secp256K1Uncompressed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsignedPublicKey_Secp256K1Uncompressed) ProtoMessage() {}

func (x *UnsignedPublicKey_Secp256K1Uncompressed) ProtoReflect() protoreflect.Message {
	mi := &file_message_contents_public_key_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsignedPublicKey_Secp256K1Uncompressed.ProtoReflect.Descriptor instead.
func (*UnsignedPublicKey_Secp256K1Uncompressed) Descriptor() ([]byte, []int) {
	return file_message_contents_public_key_proto_rawDescGZIP(), []int{0, 0}
}

func (x *UnsignedPublicKey_Secp256K1Uncompressed) GetBytes() []byte {
	if x != nil {
		return x.Bytes
	}
	return nil
}

// V1
type AccountLinkedPublicKey_V1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyBytes []byte `protobuf:"bytes,1,opt,name=key_bytes,json=keyBytes,proto3" json:"key_bytes,omitempty"` // embeds an UnsignedPublicKey
	// Types that are assignable to Proof:
	//
	//	*AccountLinkedPublicKey_V1_StaticCreateIdentitySignature
	//	*AccountLinkedPublicKey_V1_StaticSendKeyGrantSignature
	//	*AccountLinkedPublicKey_V1_SiweSignature
	Proof isAccountLinkedPublicKey_V1_Proof `protobuf_oneof:"proof"`
}

func (x *AccountLinkedPublicKey_V1) Reset() {
	*x = AccountLinkedPublicKey_V1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_contents_public_key_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountLinkedPublicKey_V1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountLinkedPublicKey_V1) ProtoMessage() {}

func (x *AccountLinkedPublicKey_V1) ProtoReflect() protoreflect.Message {
	mi := &file_message_contents_public_key_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountLinkedPublicKey_V1.ProtoReflect.Descriptor instead.
func (*AccountLinkedPublicKey_V1) Descriptor() ([]byte, []int) {
	return file_message_contents_public_key_proto_rawDescGZIP(), []int{1, 0}
}

func (x *AccountLinkedPublicKey_V1) GetKeyBytes() []byte {
	if x != nil {
		return x.KeyBytes
	}
	return nil
}

func (m *AccountLinkedPublicKey_V1) GetProof() isAccountLinkedPublicKey_V1_Proof {
	if m != nil {
		return m.Proof
	}
	return nil
}

func (x *AccountLinkedPublicKey_V1) GetStaticCreateIdentitySignature() *StaticCreateIdentitySignature {
	if x, ok := x.GetProof().(*AccountLinkedPublicKey_V1_StaticCreateIdentitySignature); ok {
		return x.StaticCreateIdentitySignature
	}
	return nil
}

func (x *AccountLinkedPublicKey_V1) GetStaticSendKeyGrantSignature() *StaticSendKeyGrantSignature {
	if x, ok := x.GetProof().(*AccountLinkedPublicKey_V1_StaticSendKeyGrantSignature); ok {
		return x.StaticSendKeyGrantSignature
	}
	return nil
}

func (x *AccountLinkedPublicKey_V1) GetSiweSignature() *SIWESignature {
	if x, ok := x.GetProof().(*AccountLinkedPublicKey_V1_SiweSignature); ok {
		return x.SiweSignature
	}
	return nil
}

type isAccountLinkedPublicKey_V1_Proof interface {
	isAccountLinkedPublicKey_V1_Proof()
}

type AccountLinkedPublicKey_V1_StaticCreateIdentitySignature struct {
	StaticCreateIdentitySignature *StaticCreateIdentitySignature `protobuf:"bytes,2,opt,name=static_create_identity_signature,json=staticCreateIdentitySignature,proto3,oneof"`
}

type AccountLinkedPublicKey_V1_StaticSendKeyGrantSignature struct {
	StaticSendKeyGrantSignature *StaticSendKeyGrantSignature `protobuf:"bytes,3,opt,name=static_send_key_grant_signature,json=staticSendKeyGrantSignature,proto3,oneof"`
}

type AccountLinkedPublicKey_V1_SiweSignature struct {
	SiweSignature *SIWESignature `protobuf:"bytes,4,opt,name=siwe_signature,json=siweSignature,proto3,oneof"`
}

func (*AccountLinkedPublicKey_V1_StaticCreateIdentitySignature) isAccountLinkedPublicKey_V1_Proof() {}

func (*AccountLinkedPublicKey_V1_StaticSendKeyGrantSignature) isAccountLinkedPublicKey_V1_Proof() {}

func (*AccountLinkedPublicKey_V1_SiweSignature) isAccountLinkedPublicKey_V1_Proof() {}

// V1
type AccountRevokedPublicKey_V1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyBytes []byte `protobuf:"bytes,1,opt,name=key_bytes,json=keyBytes,proto3" json:"key_bytes,omitempty"` // embeds an UnsignedPublicKey
	// Types that are assignable to Proof:
	//
	//	*AccountRevokedPublicKey_V1_StaticSendKeyRevokeSignature
	Proof isAccountRevokedPublicKey_V1_Proof `protobuf_oneof:"proof"`
}

func (x *AccountRevokedPublicKey_V1) Reset() {
	*x = AccountRevokedPublicKey_V1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_contents_public_key_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountRevokedPublicKey_V1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountRevokedPublicKey_V1) ProtoMessage() {}

func (x *AccountRevokedPublicKey_V1) ProtoReflect() protoreflect.Message {
	mi := &file_message_contents_public_key_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountRevokedPublicKey_V1.ProtoReflect.Descriptor instead.
func (*AccountRevokedPublicKey_V1) Descriptor() ([]byte, []int) {
	return file_message_contents_public_key_proto_rawDescGZIP(), []int{2, 0}
}

func (x *AccountRevokedPublicKey_V1) GetKeyBytes() []byte {
	if x != nil {
		return x.KeyBytes
	}
	return nil
}

func (m *AccountRevokedPublicKey_V1) GetProof() isAccountRevokedPublicKey_V1_Proof {
	if m != nil {
		return m.Proof
	}
	return nil
}

func (x *AccountRevokedPublicKey_V1) GetStaticSendKeyRevokeSignature() *StaticSendKeyRevokeSignature {
	if x, ok := x.GetProof().(*AccountRevokedPublicKey_V1_StaticSendKeyRevokeSignature); ok {
		return x.StaticSendKeyRevokeSignature
	}
	return nil
}

type isAccountRevokedPublicKey_V1_Proof interface {
	isAccountRevokedPublicKey_V1_Proof()
}

type AccountRevokedPublicKey_V1_StaticSendKeyRevokeSignature struct {
	StaticSendKeyRevokeSignature *StaticSendKeyRevokeSignature `protobuf:"bytes,2,opt,name=static_send_key_revoke_signature,json=staticSendKeyRevokeSignature,proto3,oneof"`
}

func (*AccountRevokedPublicKey_V1_StaticSendKeyRevokeSignature) isAccountRevokedPublicKey_V1_Proof() {
}

// The key bytes
type PublicKey_Secp256K1Uncompressed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// uncompressed point with prefix (0x04) [ P || X || Y ], 65 bytes
	Bytes []byte `protobuf:"bytes,1,opt,name=bytes,proto3" json:"bytes,omitempty"`
}

func (x *PublicKey_Secp256K1Uncompressed) Reset() {
	*x = PublicKey_Secp256K1Uncompressed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_contents_public_key_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicKey_Secp256K1Uncompressed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicKey_Secp256K1Uncompressed) ProtoMessage() {}

func (x *PublicKey_Secp256K1Uncompressed) ProtoReflect() protoreflect.Message {
	mi := &file_message_contents_public_key_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicKey_Secp256K1Uncompressed.ProtoReflect.Descriptor instead.
func (*PublicKey_Secp256K1Uncompressed) Descriptor() ([]byte, []int) {
	return file_message_contents_public_key_proto_rawDescGZIP(), []int{6, 0}
}

func (x *PublicKey_Secp256K1Uncompressed) GetBytes() []byte {
	if x != nil {
		return x.Bytes
	}
	return nil
}

var File_message_contents_public_key_proto protoreflect.FileDescriptor

var file_message_contents_public_key_proto_rawDesc = []byte{
	0x0a, 0x21, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x73, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x15, 0x78, 0x6d, 0x74, 0x70, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x20, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe3, 0x01, 0x0a,
	0x11, 0x55, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b,
	0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x4e,
	0x73, 0x12, 0x77, 0x0a, 0x16, 0x73, 0x65, 0x63, 0x70, 0x32, 0x35, 0x36, 0x6b, 0x31, 0x5f, 0x75,
	0x6e, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x3e, 0x2e, 0x78, 0x6d, 0x74, 0x70, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x55, 0x6e, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x64, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x2e, 0x53, 0x65, 0x63, 0x70,
	0x32, 0x35, 0x36, 0x6b, 0x31, 0x55, 0x6e, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x64, 0x48, 0x00, 0x52, 0x15, 0x73, 0x65, 0x63, 0x70, 0x32, 0x35, 0x36, 0x6b, 0x31, 0x55, 0x6e,
	0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x1a, 0x2d, 0x0a, 0x15, 0x53, 0x65,
	0x63, 0x70, 0x32, 0x35, 0x36, 0x6b, 0x31, 0x55, 0x6e, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x75, 0x6e, 0x69,
	0x6f, 0x6e, 0x22, 0xe0, 0x03, 0x0a, 0x16, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69,
	0x6e, 0x6b, 0x65, 0x64, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x42, 0x0a,
	0x02, 0x76, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x78, 0x6d, 0x74, 0x70,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x2e, 0x56, 0x31, 0x48, 0x00, 0x52, 0x02, 0x76,
	0x31, 0x1a, 0xf6, 0x02, 0x0a, 0x02, 0x56, 0x31, 0x12, 0x1b, 0x0a, 0x09, 0x6b, 0x65, 0x79, 0x5f,
	0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x6b, 0x65, 0x79,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x7f, 0x0a, 0x20, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x5f,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x34, 0x2e, 0x78, 0x6d, 0x74, 0x70, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x48, 0x00, 0x52, 0x1d, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x7a, 0x0a, 0x1f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63,
	0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x32, 0x2e, 0x78, 0x6d, 0x74, 0x70, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x53, 0x65,
	0x6e, 0x64, 0x4b, 0x65, 0x79, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x48, 0x00, 0x52, 0x1b, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x53, 0x65, 0x6e,
	0x64, 0x4b, 0x65, 0x79, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x12, 0x4d, 0x0a, 0x0e, 0x73, 0x69, 0x77, 0x65, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x78, 0x6d, 0x74,
	0x70, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x53, 0x49, 0x57, 0x45, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x48, 0x00, 0x52, 0x0d, 0x73, 0x69, 0x77, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x42, 0x07, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x42, 0x09, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x95, 0x02, 0x0a, 0x17, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x64, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65,
	0x79, 0x12, 0x43, 0x0a, 0x02, 0x76, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e,
	0x78, 0x6d, 0x74, 0x70, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x76,
	0x6f, 0x6b, 0x65, 0x64, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x2e, 0x56, 0x31,
	0x48, 0x00, 0x52, 0x02, 0x76, 0x31, 0x1a, 0xa9, 0x01, 0x0a, 0x02, 0x56, 0x31, 0x12, 0x1b, 0x0a,
	0x09, 0x6b, 0x65, 0x79, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x08, 0x6b, 0x65, 0x79, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x7d, 0x0a, 0x20, 0x73, 0x74,
	0x61, 0x74, 0x69, 0x63, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x72, 0x65,
	0x76, 0x6f, 0x6b, 0x65, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x78, 0x6d, 0x74, 0x70, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x63, 0x53, 0x65, 0x6e, 0x64, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x48, 0x00, 0x52, 0x1c, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x63, 0x53, 0x65, 0x6e, 0x64, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x70, 0x72, 0x6f,
	0x6f, 0x66, 0x42, 0x09, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x6e, 0x0a,
	0x0f, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79,
	0x12, 0x1b, 0x0a, 0x09, 0x6b, 0x65, 0x79, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x3e, 0x0a,
	0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x78, 0x6d, 0x74, 0x70, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0xb7, 0x01,
	0x0a, 0x17, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65,
	0x79, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x56, 0x32, 0x12, 0x5b, 0x0a, 0x12, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x78, 0x6d, 0x74, 0x70, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x4b, 0x65, 0x79, 0x52, 0x10, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x6e,
	0x6b, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x12, 0x3f, 0x0a, 0x07, 0x70, 0x72, 0x65, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x78, 0x6d, 0x74, 0x70, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52,
	0x06, 0x70, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x22, 0xa3, 0x01, 0x0a, 0x15, 0x53, 0x69, 0x67, 0x6e,
	0x65, 0x64, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x42, 0x75, 0x6e, 0x64, 0x6c,
	0x65, 0x12, 0x49, 0x0a, 0x0c, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x78, 0x6d, 0x74, 0x70, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52,
	0x0b, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x3f, 0x0a, 0x07,
	0x70, 0x72, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x78, 0x6d, 0x74, 0x70, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x06, 0x70, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x22, 0xa5, 0x02,
	0x0a, 0x09, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x43, 0x0a, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x78,
	0x6d, 0x74, 0x70, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x48, 0x01,
	0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x88, 0x01, 0x01, 0x12, 0x6f,
	0x0a, 0x16, 0x73, 0x65, 0x63, 0x70, 0x32, 0x35, 0x36, 0x6b, 0x31, 0x5f, 0x75, 0x6e, 0x63, 0x6f,
	0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36,
	0x2e, 0x78, 0x6d, 0x74, 0x70, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79,
	0x2e, 0x53, 0x65, 0x63, 0x70, 0x32, 0x35, 0x36, 0x6b, 0x31, 0x55, 0x6e, 0x63, 0x6f, 0x6d, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x48, 0x00, 0x52, 0x15, 0x73, 0x65, 0x63, 0x70, 0x32, 0x35,
	0x36, 0x6b, 0x31, 0x55, 0x6e, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x1a,
	0x2d, 0x0a, 0x15, 0x53, 0x65, 0x63, 0x70, 0x32, 0x35, 0x36, 0x6b, 0x31, 0x55, 0x6e, 0x63, 0x6f,
	0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x79, 0x74, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x42, 0x07,
	0x0a, 0x05, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x91, 0x01, 0x0a, 0x0f, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x4b, 0x65, 0x79, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x43, 0x0a, 0x0c, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x78, 0x6d, 0x74, 0x70, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65,
	0x79, 0x52, 0x0b, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x39,
	0x0a, 0x07, 0x70, 0x72, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x78, 0x6d, 0x74, 0x70, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65,
	0x79, 0x52, 0x06, 0x70, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x42, 0x4f, 0x0a, 0x1f, 0x6f, 0x72, 0x67,
	0x2e, 0x78, 0x6d, 0x74, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x5a, 0x2c, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x78, 0x6d, 0x74, 0x70, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x33, 0x2f, 0x67, 0x6f, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_message_contents_public_key_proto_rawDescOnce sync.Once
	file_message_contents_public_key_proto_rawDescData = file_message_contents_public_key_proto_rawDesc
)

func file_message_contents_public_key_proto_rawDescGZIP() []byte {
	file_message_contents_public_key_proto_rawDescOnce.Do(func() {
		file_message_contents_public_key_proto_rawDescData = protoimpl.X.CompressGZIP(file_message_contents_public_key_proto_rawDescData)
	})
	return file_message_contents_public_key_proto_rawDescData
}

var file_message_contents_public_key_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_message_contents_public_key_proto_goTypes = []interface{}{
	(*UnsignedPublicKey)(nil),                       // 0: xmtp.message_contents.UnsignedPublicKey
	(*AccountLinkedPublicKey)(nil),                  // 1: xmtp.message_contents.AccountLinkedPublicKey
	(*AccountRevokedPublicKey)(nil),                 // 2: xmtp.message_contents.AccountRevokedPublicKey
	(*SignedPublicKey)(nil),                         // 3: xmtp.message_contents.SignedPublicKey
	(*SignedPublicKeyBundleV2)(nil),                 // 4: xmtp.message_contents.SignedPublicKeyBundleV2
	(*SignedPublicKeyBundle)(nil),                   // 5: xmtp.message_contents.SignedPublicKeyBundle
	(*PublicKey)(nil),                               // 6: xmtp.message_contents.PublicKey
	(*PublicKeyBundle)(nil),                         // 7: xmtp.message_contents.PublicKeyBundle
	(*UnsignedPublicKey_Secp256K1Uncompressed)(nil), // 8: xmtp.message_contents.UnsignedPublicKey.Secp256k1Uncompressed
	(*AccountLinkedPublicKey_V1)(nil),               // 9: xmtp.message_contents.AccountLinkedPublicKey.V1
	(*AccountRevokedPublicKey_V1)(nil),              // 10: xmtp.message_contents.AccountRevokedPublicKey.V1
	(*PublicKey_Secp256K1Uncompressed)(nil),         // 11: xmtp.message_contents.PublicKey.Secp256k1Uncompressed
	(*Signature)(nil),                               // 12: xmtp.message_contents.Signature
	(*StaticCreateIdentitySignature)(nil),           // 13: xmtp.message_contents.StaticCreateIdentitySignature
	(*StaticSendKeyGrantSignature)(nil),             // 14: xmtp.message_contents.StaticSendKeyGrantSignature
	(*SIWESignature)(nil),                           // 15: xmtp.message_contents.SIWESignature
	(*StaticSendKeyRevokeSignature)(nil),            // 16: xmtp.message_contents.StaticSendKeyRevokeSignature
}
var file_message_contents_public_key_proto_depIdxs = []int32{
	8,  // 0: xmtp.message_contents.UnsignedPublicKey.secp256k1_uncompressed:type_name -> xmtp.message_contents.UnsignedPublicKey.Secp256k1Uncompressed
	9,  // 1: xmtp.message_contents.AccountLinkedPublicKey.v1:type_name -> xmtp.message_contents.AccountLinkedPublicKey.V1
	10, // 2: xmtp.message_contents.AccountRevokedPublicKey.v1:type_name -> xmtp.message_contents.AccountRevokedPublicKey.V1
	12, // 3: xmtp.message_contents.SignedPublicKey.signature:type_name -> xmtp.message_contents.Signature
	1,  // 4: xmtp.message_contents.SignedPublicKeyBundleV2.account_linked_key:type_name -> xmtp.message_contents.AccountLinkedPublicKey
	3,  // 5: xmtp.message_contents.SignedPublicKeyBundleV2.pre_key:type_name -> xmtp.message_contents.SignedPublicKey
	3,  // 6: xmtp.message_contents.SignedPublicKeyBundle.identity_key:type_name -> xmtp.message_contents.SignedPublicKey
	3,  // 7: xmtp.message_contents.SignedPublicKeyBundle.pre_key:type_name -> xmtp.message_contents.SignedPublicKey
	12, // 8: xmtp.message_contents.PublicKey.signature:type_name -> xmtp.message_contents.Signature
	11, // 9: xmtp.message_contents.PublicKey.secp256k1_uncompressed:type_name -> xmtp.message_contents.PublicKey.Secp256k1Uncompressed
	6,  // 10: xmtp.message_contents.PublicKeyBundle.identity_key:type_name -> xmtp.message_contents.PublicKey
	6,  // 11: xmtp.message_contents.PublicKeyBundle.pre_key:type_name -> xmtp.message_contents.PublicKey
	13, // 12: xmtp.message_contents.AccountLinkedPublicKey.V1.static_create_identity_signature:type_name -> xmtp.message_contents.StaticCreateIdentitySignature
	14, // 13: xmtp.message_contents.AccountLinkedPublicKey.V1.static_send_key_grant_signature:type_name -> xmtp.message_contents.StaticSendKeyGrantSignature
	15, // 14: xmtp.message_contents.AccountLinkedPublicKey.V1.siwe_signature:type_name -> xmtp.message_contents.SIWESignature
	16, // 15: xmtp.message_contents.AccountRevokedPublicKey.V1.static_send_key_revoke_signature:type_name -> xmtp.message_contents.StaticSendKeyRevokeSignature
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_message_contents_public_key_proto_init() }
func file_message_contents_public_key_proto_init() {
	if File_message_contents_public_key_proto != nil {
		return
	}
	file_message_contents_signature_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_message_contents_public_key_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsignedPublicKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_contents_public_key_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountLinkedPublicKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_contents_public_key_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountRevokedPublicKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_contents_public_key_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignedPublicKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_contents_public_key_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignedPublicKeyBundleV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_contents_public_key_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignedPublicKeyBundle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_contents_public_key_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_contents_public_key_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicKeyBundle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_contents_public_key_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsignedPublicKey_Secp256K1Uncompressed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_contents_public_key_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountLinkedPublicKey_V1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_contents_public_key_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountRevokedPublicKey_V1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_contents_public_key_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicKey_Secp256K1Uncompressed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_message_contents_public_key_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*UnsignedPublicKey_Secp256K1Uncompressed_)(nil),
	}
	file_message_contents_public_key_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*AccountLinkedPublicKey_V1_)(nil),
	}
	file_message_contents_public_key_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*AccountRevokedPublicKey_V1_)(nil),
	}
	file_message_contents_public_key_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*PublicKey_Secp256K1Uncompressed_)(nil),
	}
	file_message_contents_public_key_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*AccountLinkedPublicKey_V1_StaticCreateIdentitySignature)(nil),
		(*AccountLinkedPublicKey_V1_StaticSendKeyGrantSignature)(nil),
		(*AccountLinkedPublicKey_V1_SiweSignature)(nil),
	}
	file_message_contents_public_key_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*AccountRevokedPublicKey_V1_StaticSendKeyRevokeSignature)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_message_contents_public_key_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_message_contents_public_key_proto_goTypes,
		DependencyIndexes: file_message_contents_public_key_proto_depIdxs,
		MessageInfos:      file_message_contents_public_key_proto_msgTypes,
	}.Build()
	File_message_contents_public_key_proto = out.File
	file_message_contents_public_key_proto_rawDesc = nil
	file_message_contents_public_key_proto_goTypes = nil
	file_message_contents_public_key_proto_depIdxs = nil
}
