plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.7.10'
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id 'com.google.protobuf' version '0.9.1'
}

repositories {
    mavenCentral()
}

kotlin {
    jvmToolchain {
        languageVersion.set(JavaLanguageVersion.of("11"))
    }
}

dependencies {
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.9.1'

    implementation 'io.grpc:grpc-kotlin-stub:1.3.0'
    implementation 'io.grpc:grpc-protobuf-lite:1.51.0'
    implementation 'com.google.protobuf:protobuf-kotlin-lite:3.22.3'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.0'
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.21.9"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:1.47.0"
        }
        grpckt {
            artifact = "io.grpc:protoc-gen-grpc-kotlin:1.3.0:jdk8@jar"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
            grpckt {}
        }
        all()*.builtins {
            kotlin {}
        }
    }
}

sourceSets {
    test {
        java {
            srcDirs = ["lib/src/test/kotlin"]
        }
    }
    main {
        java {
            srcDirs = ["lib/src/main/kotlin"]
        }
    }
}

task sourcesJar(type: Jar) {
    classifier = "sources"
    from sourceSets.main.java.srcDirs
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = "javadoc"
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar, sourcesJar
}

publishing {
    publications {
        mavenKotlin(MavenPublication) {
            groupId = "org.xmtp"
            artifactId = "proto-kotlin"
            version = System.getenv("RELEASE_VERSION")
            from components.kotlin
            artifact sourcesJar
            artifact javadocJar

            pom {
                name = "kotlin"
                description = "XMTP Proto Kotlin Library"
                url = "https://github.com/xmtp/proto"
                packaging = "jar"

                licenses {
                    license {
                        name = "MIT License"
                        url = "https://github.com/xmtp/proto/blob/main/LICENSE"
                    }
                }
                developers {
                    developer {
                        id = "xmtp"
                        name = "xmtp"
                        email = "naomi@xmtp.com"
                    }
                }
                scm {
                    connection = "https://github.com/xmtp/proto.git"
                    developerConnection =  "https://github.com/xmtp/proto.git"
                    url = "https://github.com/xmtp/proto/tree/main"
                }
            }
        }
    }
}

signing {
    def signingKey = System.getenv("SIGN_KEY")
    def signingPassword = System.getenv("SIGN_PASSWORD")
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications.mavenKotlin
}

tasks.named('test') {
    useJUnitPlatform()
}
