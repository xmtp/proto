name: Release
on:
  push:
    branches:
      - main
      - beta
jobs:
  js:
    name: Release (JS)
    permissions:
      id-token: write
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: "24.10.0"
      - name: Install dependencies
        run: npm ci
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run semantic-release
  kotlin:
    needs: js
    if: ${{ github.ref_name == 'main' }}
    name: Release (Kotlin)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project sources
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup JDK  # Added
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Generate protobufs
        run: dev/kotlin/generate
      - name: Run build with Gradle Wrapper
        run: ./gradlew build
      - name: Set Tag
        run: |
          git fetch --tags
          TAG=`echo $(git describe --tags --abbrev=0)`
          echo "GIT_TAG=${TAG#v}" >> $GITHUB_ENV
          echo "Publishing version: ${TAG#v}"
      - name: Gradle Publish
        env:
          RELEASE_VERSION: ${{ env.GIT_TAG }}
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
          SIGN_KEY: ${{ secrets.OSSRH_GPG_SECRET_KEY }}
          SIGN_PASSWORD: ${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}
          MAVEN_PROFILE_ID: ${{ secrets.MAVEN_PROFILE_ID }}
        run: |
          echo "Publishing version: $RELEASE_VERSION"
          if [ -z "$RELEASE_VERSION" ]; then
            echo "Error: RELEASE_VERSION is empty"
            exit 1
          fi
          ./gradlew publishToSonatype closeAndReleaseSonatypeStagingRepository --info --stacktrace
